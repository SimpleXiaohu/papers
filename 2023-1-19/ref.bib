
% Journals

% First the Full Name is given, then the abbreviation used in the AMS Math
% Reviews, with an indication if it could not be found there.
% Note the 2nd overwrites the 1st, so swap them if you want the full name.


%Entries

@InProceedings{atva2020,
author="Chen, Taolue
and Hague, Matthew
and He, Jinlong
and Hu, Denghang
and Lin, Anthony Widjaja
and R{\"u}mmer, Philipp
and Wu, Zhilin",
editor="Hung, Dang Van
and Sokolsky, Oleg",
title="A Decision Procedure for Path Feasibility of String Manipulating Programs with Integer Data Type",
booktitle="Automated Technology for Verification and Analysis",
year="2020",
publisher="Springer International Publishing",
address="Cham",
pages="325--342"
},

@inproceedings{redos_fse2019,
author = {Davis, James C.},
title = {Rethinking Regex Engines to Address ReDoS},
year = {2019},
isbn = {9781450355728},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3338906.3342509},
doi = {10.1145/3338906.3342509},
pages = {1256–1258},
numpages = {3},
keywords = {empirical software engineering, REDOS, Regular expressions, catastrophic backtracking},
location = {Tallinn, Estonia},
series = {ESEC/FSE 2019}
},

@inproceedings{symbolic_pldi2021,
author = {Stanford, Caleb and Veanes, Margus and Bj\o{}rner, Nikolaj},
title = {Symbolic Boolean Derivatives for Efficiently Solving Extended Regular Expression Constraints},
year = {2021},
isbn = {9781450383912},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3453483.3454066},
doi = {10.1145/3453483.3454066},
booktitle = {Proceedings of the 42nd ACM SIGPLAN International Conference on Programming Language Design and Implementation},
pages = {620–635},
numpages = {16},
keywords = {SMT, automaton, derivative, regex, regular expression, string},
location = {Virtual, Canada},
series = {PLDI 2021}
},

@article{undecidable_2016,
author = {Ganesh, Vijay and Berzish, Murphy},
year = {2016},
month = {05},
pages = {},
title = {Undecidability of a Theory of Strings, Linear Arithmetic over Length, and String-Number Conversion}
},

@book{aut_hopcraft,
  added-at = {2009-05-20T01:29:36.000+0200},
  author = {Hopcroft, John E. and Ullman, Jeff D.},
  biburl = {https://www.bibsonomy.org/bibtex/26f42b10773b0f97be73d4e0d6b8db3bf/sriram0339},
  description = {First cut database},
  interhash = {0fb20598f4921085d9c5058fc8d95f00},
  intrahash = {6f42b10773b0f97be73d4e0d6b8db3bf},
  keywords = {imported},
  publisher = {Addison-Wesley Publishing Company},
  timestamp = {2009-05-20T01:29:37.000+0200},
  title = {Introduction to Automata Theory, Languages, and Computation},
  year = 1979
},

@InProceedings{quadratic_aplas2018,
author="Le, Quang Loc
and He, Mengda",
editor="Ryu, Sukyoung",
title="A Decision Procedure for String Logic with Quadratic Equations, Regular Expressions and Length Constraints",
booktitle="Programming Languages and Systems",
year="2018",
publisher="Springer International Publishing",
address="Cham",
pages="350--372",
isbn="978-3-030-02768-1"
},

@misc{ostrich2023,
  author = {Denghang Hu},
  title = {ostich},
  year = {2023},
  publisher = {GitHub},
  journal = {GitHub repository},
  howpublished = {\url{https://github.com/SimpleXiaohu/ostrich/tree/cost-enriched-automata}},
  commit = {ea01ed126fdb7f96c6f8ad6474487df2b6a98aab}
},
@MISC{stackoverflow,
title = {Stackoverflow},
month = may,
year = {2022},
howpublished={\url{https://stackoverflow.com/}}
},

@MISC{regexlib,
title = {regular expression library},
month = may,
year = {2022},
howpublished={\url{https://regexlib.com/}}
},

@article{zaligvinder_2021,
title = "ZaligVinder: A generic test framework for string solvers",
abstract = "The increased interest in string solving in the recent years has made it very hard to identify the right tool to address a particular user's purpose. Firstly, there is a multitude of string solvers, each addressing essentially some subset of the general problem. Generally, the addressed fragments are relevant and well motivated, but the lack of comparisons between the existing tools on an equal set of benchmarks cannot go unnoticed, especially as a common framework to compare solvers seems to be missing. In this paper, we gather a set of relevant benchmarks and introduce our new benchmarking framework to address this purpose.",
keywords = "analysis of string solvers, string solving benchmarks, test framework for string solvers",
author = "Mitja Kulczynski and Florin Manea and Dirk Nowotka and Poulsen, {Danny B{\o}gsted}",
note = "Publisher Copyright: {\textcopyright} 2021 The Authors. Journal of Software: Evolution and Process published by John Wiley & Sons Ltd.",
year = "2021",
doi = "10.1002/smr.2400",
language = "English",
journal = "Journal of Software: Evolution and Process",
issn = "2047-7481",
publisher = "Wiley",
}

@InProceedings{unary_nfa_2010,
author="Sawa, Zden{\v{e}}k",
editor="Ku{\v{c}}era, Anton{\'i}n
and Potapov, Igor",
title="Efficient Construction of Semilinear Representations of Languages Accepted by Unary NFA",
booktitle="Reachability Problems",
year="2010",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="176--182",
abstract="Chrobak (1986) proved that a language accepted by a given nondeterministic finite automaton with one-letter alphabet, i.e., a unary NFA, with n states can be represented as the union of O(n2) arithmetic progressions, and Martinez (2002) has shown how to compute these progressions in polynomial time. To (2009) has pointed out recently that Chrobak's construction and Martinez's algorithm, which is based on it, contain a subtle error and has shown how they can be corrected. In this paper, a new simpler and more efficient algorithm for the same problem is presented. The running time of the presented algorithm is O(n2(n{\thinspace}+{\thinspace}m)), where n is the number of states and m the number of transitions of a given unary NFA.",
isbn="978-3-642-15349-5"
}

@inproceedings{parikh_2005,
author = {Verma, Kumar Neeraj and Seidl, Helmut and Schwentick, Thomas},
title = {On the Complexity of Equational Horn Clauses},
year = {2005},
isbn = {3540280057},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
url = {https://doi.org/10.1007/11532231_25},
doi = {10.1007/11532231_25},
abstract = {Security protocols employing cryptographic primitives with algebraic properties are conveniently modeled using Horn clauses modulo equational theories. We consider clauses corresponding to the class $mathcal{H}3$ of Nielson, Nielson and Seidl. We show that modulo the theory ACU of an associative-commutative symbol with unit, as well as its variants like the theory XOR and the theory AG of Abelian groups, unsatisfiability is NP-complete. Also membership and intersection-non-emptiness problems for the closely related class of one-way as well as two-way tree automata modulo these equational theories are NP-complete. A key technical tool is a linear time construction of an existential Presburger formula corresponding to the Parikh image of a context-free language. Our algorithms require deterministic polynomial time using an oracle for existential Presburger formulas, suggesting efficient implementations are possible.},
booktitle = {Proceedings of the 20th International Conference on Automated Deduction},
pages = {337–352},
numpages = {16},
location = {Tallinn, Estonia},
series = {CADE' 20}
}







