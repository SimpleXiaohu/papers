
% Journals

% First the Full Name is given, then the abbreviation used in the AMS Math
% Reviews, with an indication if it could not be found there.
% Note the 2nd overwrites the 1st, so swap them if you want the full name.


%Entries

@InProceedings{atva2020,
author="Chen, Taolue
and Hague, Matthew
and He, Jinlong
and Hu, Denghang
and Lin, Anthony Widjaja
and R{\"u}mmer, Philipp
and Wu, Zhilin",
editor="Hung, Dang Van
and Sokolsky, Oleg",
title="A Decision Procedure for Path Feasibility of String Manipulating Programs with Integer Data Type",
booktitle="Automated Technology for Verification and Analysis",
year="2020",
publisher="Springer International Publishing",
address="Cham",
pages="325--342"
},

@article{parikh_theorem,
author = {Parikh, Rohit J.},
title = {On Context-Free Languages},
year = {1966},
issue_date = {Oct. 1966},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {13},
number = {4},
issn = {0004-5411},
url = {https://doi.org/10.1145/321356.321364},
doi = {10.1145/321356.321364},
abstract = {In this report, certain properties of context-free (CF or type 2) grammars are investigated, like that of Chomsky. In particular, questions regarding structure, possible ambiguity and relationship to finite automata are considered. The following results are presented: The language generated by a context-free grammmar is linear in a sense that is defined precisely.The requirement of unambiguity—that every sentence has a unique phrase structure—weakens the grammar in the sense that there exists a CF language that cannot be generated unambiguously by a CF grammar.The result that not every CF language is a finite automaton (FA) language is improved in the following way. There exists a CF language L such that for any L′ ⊆ L, if L′ is FA, an L″ ⊆ L can be found such that L″ is also FA, L′ ⊆ L″ and L″ contains infinitely many sentences not in L′.A type of grammar is defined that is intermediate between type 1 and type 2 grammars. It is shown that this type of grammar is essentially stronger than type 2 grammars and has the advantage over type 1 grammars that the phrase structure of a grammatical sentence is unique, once the derivation is given.},
journal = {J. ACM},
month = {oct},
pages = {570–581},
numpages = {12}
}

@inproceedings{parikh_compute,
author = {Verma, Kumar Neeraj and Seidl, Helmut and Schwentick, Thomas},
title = {On the Complexity of Equational Horn Clauses},
year = {2005},
isbn = {3540280057},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
url = {https://doi.org/10.1007/11532231_25},
doi = {10.1007/11532231_25},
abstract = {Security protocols employing cryptographic primitives with algebraic properties are conveniently modeled using Horn clauses modulo equational theories. We consider clauses corresponding to the class $mathcal{H}3$ of Nielson, Nielson and Seidl. We show that modulo the theory ACU of an associative-commutative symbol with unit, as well as its variants like the theory XOR and the theory AG of Abelian groups, unsatisfiability is NP-complete. Also membership and intersection-non-emptiness problems for the closely related class of one-way as well as two-way tree automata modulo these equational theories are NP-complete. A key technical tool is a linear time construction of an existential Presburger formula corresponding to the Parikh image of a context-free language. Our algorithms require deterministic polynomial time using an oracle for existential Presburger formulas, suggesting efficient implementations are possible.},
booktitle = {Proceedings of the 20th International Conference on Automated Deduction},
pages = {337–352},
numpages = {16},
location = {Tallinn, Estonia},
series = {CADE' 20}
}

@online{parikh_for_nfa,
  author = {Peter Habermehl},
  title = {The Parikh image of languages and linear constraints},
  year = 2012,
  url = {http://www.it.uu.se/research/group/astra/CPmeetsCAV/slides/habermehl.pdf},
  urldate = {2012-6-28}
}

@article{parikh_anthony,
  author    = {Anthony Widjaja To},
  title     = {Parikh Images of Regular Languages: Complexity and Applications},
  journal   = {CoRR},
  volume    = {abs/1002.1464},
  year      = {2010},
  url       = {http://arxiv.org/abs/1002.1464},
  eprinttype = {arXiv},
  eprint    = {1002.1464},
  timestamp = {Mon, 13 Aug 2018 16:46:30 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/abs-1002-1464.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{redos_fse2019,
author = {Davis, James C.},
title = {Rethinking Regex Engines to Address ReDoS},
year = {2019},
isbn = {9781450355728},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3338906.3342509},
doi = {10.1145/3338906.3342509},
abstract = {Regular expressions (regexes) are a powerful string manipulation tool. Unfortunately, in programming languages like Python, Java, and JavaScript, they are unnecessarily dangerous, implemented with worst-case exponential matching behavior. This high time complexity exposes software services to regular expression denial of service (ReDoS) attacks. We propose a data-driven redesign of regex engines, to reflect how regexes are used and what they typically look like. We report that about 95% of regexes in popular programming languages can be evaluated in linear time. The regex engine is a fundamental component of a programming language, and any changes risk introducing compatibility problems. We believe a full redesign is therefore impractical, and so we describe how the vast majority of regex matches can be made linear-time with minor, not major, changes to existing algorithms. Our prototype shows that on a kernel of the regex language, we can trade space for time to make regex matches safe},
booktitle = {Proceedings of the 2019 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
pages = {1256–1258},
numpages = {3},
keywords = {REDOS, catastrophic backtracking, Regular expressions, empirical software engineering},
location = {Tallinn, Estonia},
series = {ESEC/FSE 2019}
}

@inproceedings{symbolic_pldi2021,
author = {Stanford, Caleb and Veanes, Margus and Bj\o{}rner, Nikolaj},
title = {Symbolic Boolean Derivatives for Efficiently Solving Extended Regular Expression Constraints},
year = {2021},
isbn = {9781450383912},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3453483.3454066},
doi = {10.1145/3453483.3454066},
booktitle = {Proceedings of the 42nd ACM SIGPLAN International Conference on Programming Language Design and Implementation},
pages = {620–635},
numpages = {16},
keywords = {SMT, automaton, derivative, regex, regular expression, string},
location = {Virtual, Canada},
series = {PLDI 2021}
},

@article{undecidable_1,
author = {Ganesh, Vijay and Berzish, Murphy},
year = {2016},
month = {05},
pages = {},
title = {Undecidability of a Theory of Strings, Linear Arithmetic over Length, and String-Number Conversion}
}

@InProceedings{undecidable_2,
author="Ganesh, Vijay
and Minnes, Mia
and Solar-Lezama, Armando
and Rinard, Martin",
editor="Biere, Armin
and Nahir, Amir
and Vos, Tanja",
title="Word Equations with Length Constraints: What's Decidable?",
booktitle="Hardware and Software: Verification and Testing",
year="2013",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="209--226",
abstract="We prove several decidability and undecidability results for the satisfiability and validity problems for languages that can express solutions to word equations with length constraints. The atomic formulas over this language are equality over string terms (word equations), linear inequality over the length function (length constraints), and membership in regular sets. These questions are important in logic, program analysis, and formal verification. Variants of these questions have been studied for many decades by mathematicians. More recently, practical satisfiability procedures (aka SMT solvers) for these formulas have become increasingly important in the context of security analysis for string-manipulating programs such as web applications.",
isbn="978-3-642-39611-3"
}



@book{aut_hopcraft,
  added-at = {2009-05-20T01:29:36.000+0200},
  author = {Hopcroft, John E. and Ullman, Jeff D.},
  biburl = {https://www.bibsonomy.org/bibtex/26f42b10773b0f97be73d4e0d6b8db3bf/sriram0339},
  description = {First cut database},
  interhash = {0fb20598f4921085d9c5058fc8d95f00},
  intrahash = {6f42b10773b0f97be73d4e0d6b8db3bf},
  keywords = {imported},
  publisher = {Addison-Wesley Publishing Company},
  timestamp = {2009-05-20T01:29:37.000+0200},
  title = {Introduction to Automata Theory, Languages, and Computation},
  year = 1979
},

@InProceedings{quadratic_aplas2018,
author="Le, Quang Loc
and He, Mengda",
editor="Ryu, Sukyoung",
title="A Decision Procedure for String Logic with Quadratic Equations, Regular Expressions and Length Constraints",
booktitle="Programming Languages and Systems",
year="2018",
publisher="Springer International Publishing",
address="Cham",
pages="350--372",
isbn="978-3-030-02768-1"
},

@misc{ostrich2023,
  author = {Denghang Hu},
  title = {ostich},
  year = {2023},
  publisher = {GitHub},
  journal = {GitHub repository},
  howpublished = {\url{https://github.com/SimpleXiaohu/ostrich/tree/cost-enriched-automata}},
  commit = {ea01ed126fdb7f96c6f8ad6474487df2b6a98aab}
},
@MISC{stackoverflow,
title = {Stackoverflow},
month = may,
year = {2022},
howpublished={\url{https://stackoverflow.com/}}
},

@MISC{regexlib,
title = {regular expression library},
month = may,
year = {2022},
howpublished={\url{https://regexlib.com/}}
},

@article{zaligvinder_2021,
author = {Kulczynski, Mitja and Manea, Florin and Nowotka, Dirk and Poulsen, Danny Bøgsted},
title = {ZaligVinder: A generic test framework for string solvers},
journal = {Journal of Software: Evolution and Process},
volume = {35},
number = {4},
pages = {e2400},
keywords = {analysis of string solvers, string solving benchmarks, test framework for string solvers},
doi = {https://doi.org/10.1002/smr.2400},
url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/smr.2400},
eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/smr.2400},
abstract = {Abstract The increased interest in string solving in the recent years has made it very hard to identify the right tool to address a particular user's purpose. Firstly, there is a multitude of string solvers, each addressing essentially some subset of the general problem. Generally, the addressed fragments are relevant and well motivated, but the lack of comparisons between the existing tools on an equal set of benchmarks cannot go unnoticed, especially as a common framework to compare solvers seems to be missing. In this paper, we gather a set of relevant benchmarks and introduce our new benchmarking framework to address this purpose.},
year = {2023}
}


@InProceedings{unary_nfa_2010,
author="Sawa, Zden{\v{e}}k",
editor="Ku{\v{c}}era, Anton{\'i}n
and Potapov, Igor",
title="Efficient Construction of Semilinear Representations of Languages Accepted by Unary NFA",
booktitle="Reachability Problems",
year="2010",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="176--182",
abstract="Chrobak (1986) proved that a language accepted by a given nondeterministic finite automaton with one-letter alphabet, i.e., a unary NFA, with n states can be represented as the union of O(n2) arithmetic progressions, and Martinez (2002) has shown how to compute these progressions in polynomial time. To (2009) has pointed out recently that Chrobak's construction and Martinez's algorithm, which is based on it, contain a subtle error and has shown how they can be corrected. In this paper, a new simpler and more efficient algorithm for the same problem is presented. The running time of the presented algorithm is O(n2(n{\thinspace}+{\thinspace}m)), where n is the number of states and m the number of transitions of a given unary NFA.",
isbn="978-3-642-15349-5"
}

@InProceedings{bmc_1,
author="Biere, Armin
and Cimatti, Alessandro
and Clarke, Edmund
and Zhu, Yunshan",
editor="Cleaveland, W. Rance",
title="Symbolic Model Checking without BDDs",
booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
year="1999",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="193--207",
abstract="Symbolic Model Checking [3], [14] has proven to be a powerful technique for the verification of reactive systems. BDDs [2] have traditionally been used as a symbolic representation of the system. In this paper we show how boolean decision procedures, like St{\aa}lmarck's Method [16] or the Davis {\&} Putnam Procedure [7], can replace BDDs. This new technique avoids the space blow up of BDDs, generates counterexamples much faster, and sometimes speeds up the verification. In addition, it produces counterexamples of minimal length. We introduce a bounded model checking procedure for LTL which reduces model checking to propositional satisfiability.We show that bounded LTL model checking can be done without a tableau construction. We have implemented a model checker BMC, based on bounded model checking, and preliminary results are presented.",
isbn="978-3-540-49059-3"
}

@article{bmc_2,
  title={Bounded model checking using satisfiability solving},
  author={Clarke, Edmund and Biere, Armin and Raimi, Richard and Zhu, Yunshan},
  journal={Formal methods in system design},
  volume={19},
  pages={7--34},
  year={2001},
  publisher={Springer}
}

@article{bmc_3,
  title={Bounded model checking},
  author={Armin Biere},
  journal={Adv. Comput.},
  year={2021},
  volume={58},
  pages={117-148}
}

@InProceedings{princess,
author="R{\"u}mmer, Philipp",
editor="Cervesato, Iliano
and Veith, Helmut
and Voronkov, Andrei",
title="A Constraint Sequent Calculus for First-Order Logic with Linear Integer Arithmetic",
booktitle="Logic for Programming, Artificial Intelligence, and Reasoning",
year="2008",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="274--289",
abstract="First-order logic modulo the theory of integer arithmetic is the basis for reasoning in many areas, including deductive software verification and software model checking. While satisfiability checking for ground formulae in this logic is well understood, it is still an open question how the general case of quantified formulae can be handled in an efficient and systematic way. As a possible answer, we introduce a sequent calculus that combines ideas from free-variable constraint tableaux with the Omega quantifier elimination procedure. The calculus is complete for theorems of first-order logic (without functions, but with arbitrary uninterpreted predicates), can decide Presburger arithmetic, and is complete for a substantial fragment of the combination of both.",
isbn="978-3-540-89439-1"
}

@inproceedings{z3str3,
author = {Berzish, Murphy and Ganesh, Vijay and Zheng, Yunhui},
title = {Z3str3: A String Solver with Theory-Aware Heuristics},
year = {2017},
isbn = {9780983567875},
publisher = {FMCAD Inc},
address = {Austin, Texas},
abstract = {We present a new string SMT solver, Z3str3, that is faster than its competitors Z3str2, Norn, CVC4, S3, and S3P over a majority of three industrial-strength benchmarks, namely, Kaluza, PISA, and IBM AppScan. Z3str3 supports string equations, linear arithmetic over length function, and regular language membership predicate. The key algorithmic innovation behind the efficiency of Z3str3 is a technique we call theory-aware branching, wherein we modify Z3's branching heuristic to take into account the structure of theory literals to compute branching activities. In the traditional DPLL(T) architecture, the structure of theory literals is hidden from the DPLL(T) SAT solver because of the Boolean abstraction constructed over the input theory formula. By contrast, the theory-aware technique presented in this paper exposes the structure of theory literals to the DPLL(T) SAT solver's branching heuristic, thus enabling it to make much smarter decisions during its search than otherwise. As a consequence, Z3str3 has better performance than its competitors.},
booktitle = {Proceedings of the 17th Conference on Formal Methods in Computer-Aided Design},
pages = {55–59},
numpages = {5},
location = {Vienna, Austria},
series = {FMCAD '17}
}

@inproceedings{z3seq,
author = {Stanford, Caleb and Veanes, Margus and Bj\o{}rner, Nikolaj},
title = {Symbolic Boolean Derivatives for Efficiently Solving Extended Regular Expression Constraints},
year = {2021},
isbn = {9781450383912},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3453483.3454066},
doi = {10.1145/3453483.3454066},
abstract = {The manipulation of raw string data is ubiquitous in security-critical software, and verification of such software relies on efficiently solving string and regular expression constraints via SMT. However, the typical case of Boolean combinations of regular expression constraints exposes blowup in existing techniques. To address solvability of such constraints, we propose a new theory of derivatives of symbolic extended regular expressions (extended meaning that complement and intersection are incorporated), and show how to apply this theory to obtain more efficient decision procedures. Our implementation of these ideas, built on top of Z3, matches or outperforms state-of-the-art solvers on standard and handwritten benchmarks, showing particular benefits on examples with Boolean combinations. Our work is the first formalization of derivatives of regular expressions which both handles intersection and complement and works symbolically over an arbitrary character theory. It unifies existing approaches involving derivatives of extended regular expressions, alternating automata and Boolean automata by lifting them to a common symbolic platform. It relies on a parsimonious augmentation of regular expressions: a construct for symbolic conditionals is shown to be sufficient to obtain relevant closure properties for derivatives over extended regular expressions.},
booktitle = {Proceedings of the 42nd ACM SIGPLAN International Conference on Programming Language Design and Implementation},
pages = {620–635},
numpages = {16},
keywords = {automaton, derivative, regex, regular expression, SMT, string},
location = {Virtual, Canada},
series = {PLDI 2021}
}

@InProceedings{z3str3re,
author="Berzish, Murphy
and Kulczynski, Mitja
and Mora, Federico
and Manea, Florin
and Day, Joel D.
and Nowotka, Dirk
and Ganesh, Vijay",
editor="Silva, Alexandra
and Leino, K. Rustan M.",
title="An SMT Solver for Regular Expressions and Linear Arithmetic over String Length",
booktitle="Computer Aided Verification",
year="2021",
publisher="Springer International Publishing",
address="Cham",
pages="289--312",
abstract="We present a novel length-aware solving algorithm for the quantifier-free first-order theory over regex membership predicate and linear arithmetic over string length. We implement and evaluate this algorithm and related heuristics in the Z3 theorem prover. A crucial insight that underpins our algorithm is that real-world regex and string formulas contain a wealth of information about upper and lower bounds on lengths of strings, and such information can be used very effectively to simplify operations on automata representing regular expressions. Additionally, we present a number of novel general heuristics, such as the prefix/suffix method, that can be used to make a variety of regex solving algorithms more efficient in practice. We showcase the power of our algorithm and heuristics via an extensive empirical evaluation over a large and diverse benchmark of 57256 regex-heavy instances, almost 75{\%} of which are derived from industrial applications or contributed by other solver developers. Our solver outperforms five other state-of-the-art string solvers, namely, CVC4, OSTRICH, Z3seq, Z3str3, and Z3-Trau, over this benchmark, in particular achieving a speedup of 2.4{\$}{\$}{\backslash}times {\$}{\$}{\texttimes}over CVC4, 4.4{\$}{\$}{\backslash}times {\$}{\$}{\texttimes}over Z3seq, 6.4{\$}{\$}{\backslash}times {\$}{\$}{\texttimes}over Z3-Trau, 9.1{\$}{\$}{\backslash}times {\$}{\$}{\texttimes}over Z3str3, and 13{\$}{\$}{\backslash}times {\$}{\$}{\texttimes}over OSTRICH.",
isbn="978-3-030-81688-9"
}

@InProceedings{cvc5,
author="Barbosa, Haniel
and Barrett, Clark
and Brain, Martin
and Kremer, Gereon
and Lachnitt, Hanna
and Mann, Makai
and Mohamed, Abdalrhman
and Mohamed, Mudathir
and Niemetz, Aina
and N{\"o}tzli, Andres
and Ozdemir, Alex
and Preiner, Mathias
and Reynolds, Andrew
and Sheng, Ying
and Tinelli, Cesare
and Zohar, Yoni",
editor="Fisman, Dana
and Rosu, Grigore",
title="cvc5: A Versatile and Industrial-Strength SMT Solver",
booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
year="2022",
publisher="Springer International Publishing",
address="Cham",
pages="415--442",
abstract="cvc5 is the latest SMT solver in the cooperating validity checker series and builds on the successful code base of CVC4. This paper serves as a comprehensive system description of cvc5 's architectural design and highlights the major features and components introduced since CVC4  1.8. We evaluate cvc5 's performance on all benchmarks in SMT-LIB and provide a comparison against CVC4 and Z3.",
isbn="978-3-030-99524-9"
}

@INPROCEEDINGS{trau,
  author={Abdulla, Parosh Aziz and Faouzi Atig, Mohamed and Chen, Yu-Fang and Diep, Bui Phi and Holík, Lukáš and Rezine, Ahmed and Rümmer, Philipp},
  booktitle={2018 Formal Methods in Computer Aided Design (FMCAD)}, 
  title={Trau: SMT solver for string constraints}, 
  year={2018},
  volume={},
  number={},
  pages={1-5},
  doi={10.23919/FMCAD.2018.8602997}
}

@inproceedings{z3trau,
author = {Abdulla, Parosh Aziz and Atig, Mohamed Faouzi and Chen, Yu-Fang and Diep, Bui Phi and Dolby, Julian and Jank\r{u}, Petr and Lin, Hsin-Hung and Hol\'{\i}k, Luk\'{a}\v{s} and Wu, Wei-Cheng},
title = {Efficient Handling of String-Number Conversion},
year = {2020},
isbn = {9781450376136},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3385412.3386034},
doi = {10.1145/3385412.3386034},
abstract = {String-number conversion is an important class of constraints needed for the symbolic execution of string-manipulating programs. In particular solving string constraints with string-number conversion is necessary for the analysis of scripting languages such as JavaScript and Python, where string-number conversion is a part of the definition of the core semantics of these languages. However, solving this type of constraint is very challenging for the state-of-the-art solvers. We propose in this paper an approach that can efficiently support both string-number conversion and other common types of string constraints. Experimental results show that it significantly outperforms other state-of-the-art tools on benchmarks that involves string-number conversion.},
booktitle = {Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation},
pages = {943–957},
numpages = {15},
keywords = {Formal Verification, String Solver, Automata},
location = {London, UK},
series = {PLDI 2020}
}

@article{ostrich,
author = {Chen, Taolue and Hague, Matthew and Lin, Anthony W. and R\"{u}mmer, Philipp and Wu, Zhilin},
title = {Decision Procedures for Path Feasibility of String-Manipulating Programs with Complex Operations},
year = {2019},
issue_date = {January 2019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {3},
number = {POPL},
url = {https://doi.org/10.1145/3290362},
doi = {10.1145/3290362},
abstract = {The design and implementation of decision procedures for checking path feasibility in string-manipulating programs is an important problem, with such applications as symbolic execution of programs with strings and automated detection of cross-site scripting (XSS) vulnerabilities in web applications. A (symbolic) path is given as a finite sequence of assignments and assertions (i.e. without loops), and checking its feasibility amounts to determining the existence of inputs that yield a successful execution. Modern programming languages (e.g. JavaScript, PHP, and Python) support many complex string operations, and strings are also often implicitly modified during a computation in some intricate fashion (e.g. by some autoescaping mechanisms). In this paper we provide two general semantic conditions which together ensure the decidability of path feasibility: (1) each assertion admits regular monadic decomposition (i.e. is an effectively recognisable relation), and (2) each assignment uses a (possibly nondeterministic) function whose inverse relation preserves regularity. We show that the semantic conditions are expressive since they are satisfied by a multitude of string operations including concatenation, one-way and two-way finite-state transducers, replaceall functions (where the replacement string could contain variables), string-reverse functions, regular-expression matching, and some (restricted) forms of letter-counting/length functions. The semantic conditions also strictly subsume existing decidable string theories (e.g. straight-line fragments, and acyclic logics), and most existing benchmarks (e.g. most of Kaluza’s, and all of SLOG’s, Stranger’s, and SLOTH’s benchmarks). Our semantic conditions also yield a conceptually simple decision procedure, as well as an extensible architecture of a string solver in that a user may easily incorporate his/her own string functions into the solver by simply providing code for the pre-image computation without worrying about other parts of the solver. Despite these, the semantic conditions are unfortunately too general to provide a fast and complete decision procedure. We provide strong theoretical evidence for this in the form of complexity results. To rectify this problem, we propose two solutions. Our main solution is to allow only partial string functions (i.e., prohibit nondeterminism) in condition (2). This restriction is satisfied in many cases in practice, and yields decision procedures that are effective in both theory and practice. Whenever nondeterministic functions are still needed (e.g. the string function split), our second solution is to provide a syntactic fragment that provides a support of nondeterministic functions, and operations like one-way transducers, replaceall (with constant replacement string), the string-reverse function, concatenation, and regular-expression matching. We show that this fragment can be reduced to an existing solver SLOTH that exploits fast model checking algorithms like IC3. We provide an efficient implementation of our decision procedure (assuming our first solution above, i.e., deterministic partial string functions) in a new string solver OSTRICH. Our implementation provides built-in support for concatenation, reverse, functional transducers (FFT), and replaceall and provides a framework for extensibility to support further string functions. We demonstrate the efficacy of our new solver against other competitive solvers.},
journal = {Proc. ACM Program. Lang.},
month = {jan},
articleno = {49},
numpages = {30},
keywords = {Reverse, Decision Procedures, Transducers, ReplaceAll, Straight-Line Programs, String Constraints}
}

@article{sloth,
author = {Hol\'{\i}k, Luk\'{a}\v{s} and Jank\r{u}, Petr and Lin, Anthony W. and R\"{u}mmer, Philipp and Vojnar, Tom\'{a}\v{s}},
title = {String Constraints with Concatenation and Transducers Solved Efficiently},
year = {2017},
issue_date = {January 2018},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2},
number = {POPL},
url = {https://doi.org/10.1145/3158092},
doi = {10.1145/3158092},
abstract = {String analysis is the problem of reasoning about how strings are manipulated by a program. It has numerous applications including automatic detection of cross-site scripting, and automatic test-case generation. A&nbsp;popular string analysis technique includes symbolic executions, which at their core use constraint solvers over the string domain, a.k.a. string solvers. Such solvers typically reason about constraints expressed in theories over strings with the concatenation operator as an atomic constraint. In recent years, researchers started to recognise the importance of incorporating the replace-all operator (i.e. replace all occurrences of a string by another string) and, more generally, finite-state transductions in the theories of strings with concatenation. Such string operations are typically crucial for reasoning about XSS vulnerabilities in web applications, especially for modelling sanitisation functions and implicit browser transductions (e.g. innerHTML). Although this results in an undecidable theory in general, it was recently shown that the straight-line fragment of the theory is decidable, and is sufficiently expressive in practice. In this paper, we provide the first string solver that can reason about constraints involving both concatenation and finite-state transductions. Moreover, it has a completeness and termination guarantee for several important fragments (e.g. straight-line fragment). The main challenge addressed in the paper is the prohibitive worst-case complexity of the theory (double-exponential time), which is exponentially harder than the case without finite-state transductions. To this end, we propose a method that exploits succinct alternating finite-state automata as concise symbolic representations of string constraints. In contrast to previous approaches using nondeterministic automata, alternation offers not only exponential savings in space when representing Boolean combinations of transducers, but also a possibility of succinct representation of otherwise costly combinations of transducers and concatenation. Reasoning about the emptiness of the AFA language requires a state-space exploration in an exponential-sized graph, for which we use model checking algorithms (e.g.&nbsp;IC3). We have implemented our algorithm and demonstrated its efficacy on benchmarks that are derived from cross-site scripting analysis and other examples in the literature.},
journal = {Proc. ACM Program. Lang.},
month = {dec},
articleno = {4},
numpages = {32},
keywords = {Decision Procedure, String Solving, IC3, Alternating Finite Automata}
}

@InProceedings{ABB15,
author="Aydin, Abdulbaki
and Bang, Lucas
and Bultan, Tevfik",
editor="Kroening, Daniel
and P{\u{a}}s{\u{a}}reanu, Corina S.",
title="Automata-Based Model Counting for String Constraints",
booktitle="Computer Aided Verification",
year="2015",
publisher="Springer International Publishing",
address="Cham",
pages="255--272",
abstract="Most common vulnerabilities in Web applications are due to string manipulation errors in input validation and sanitization code. String constraint solvers are essential components of program analysis techniques for detecting and repairing vulnerabilities that are due to string manipulation errors. For quantitative and probabilistic program analyses, checking the satisfiability of a constraint is not sufficient, and it is necessary to count the number of solutions. In this paper, we present a constraint solver that, given a string constraint, (1) constructs an automaton that accepts all solutions that satisfy the constraint, (2) generates a function that, given a length bound, gives the total number of solutions within that bound. Our approach relies on the observation that, using an automata-based constraint representation, model counting reduces to path counting, which can be solved precisely. We demonstrate the effectiveness of our approach on a large set of string constraints extracted from real-world web applications.",
isbn="978-3-319-21690-4"
}

@InProceedings{dpll_t,
author="Ganzinger, Harald
and Hagen, George
and Nieuwenhuis, Robert
and Oliveras, Albert
and Tinelli, Cesare",
editor="Alur, Rajeev
and Peled, Doron A.",
title="DPLL(T): Fast Decision Procedures",
booktitle="Computer Aided Verification",
year="2004",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="175--188",
abstract="The logic of equality with uninterpreted functions (EUF) and its extensions have been widely applied to processor verification, by means of a large variety of progressively more sophisticated (lazy or eager) translations into propositional SAT. Here we propose a new approach, namely a general DPLL(X) engine, whose parameter X can be instantiated with a specialized solver SolverTfor a given theory T, thus producing a system DPLL(T). We describe this DPLL(T) scheme, the interface between DPLL(X) and SolverT, the architecture of DPLL(X), and our solver for EUF, which includes incremental and backtrackable congruence closure algorithms for dealing with the built-in equality and the integer successor and predecessor symbols. Experiments with a first implementation indicate that our technique already outperforms the previous methods on most benchmarks, and scales up very well.",
isbn="978-3-540-27813-9"
}

@article{redos_lenka,
author = "Turo\v{n}ov\'{a}, Lenka 
and Hol\'{\i}k, Luk\'{a}\v{s} 
and Leng\'{a}l, Ond\v{r}ej 
and Saarikivi, Olli 
and Veanes, Margus 
and Vojnar, Tom\'{a}\v{s}",
title = {Regex Matching with Counting-Set Automata},
year = {2020},
issue_date = {November 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {OOPSLA},
url = {https://doi.org/10.1145/3428286},
doi = {10.1145/3428286},
abstract = {We propose a solution to the problem of efficient matching regular expressions (regexes) with bounded repetition, such as (ab){1,100}, using deterministic automata. For this, we introduce novel counting-set automata (CsAs), automata with registers that can hold sets of bounded integers and can be manipulated by a limited portfolio of constant-time operations. We present an algorithm that compiles a large sub-class of regexes to deterministic CsAs. This includes (1) a novel Antimirov-style translation of regexes with counting to counting automata (CAs), nondeterministic automata with bounded counters, and (2) our main technical contribution, a determinization of CAs that outputs CsAs. The main advantage of this workflow is that the size of the produced CsAs does not depend on the repetition bounds used in the regex (while the size of the DFA is exponential to them). Our experimental results confirm that deterministic CsAs produced from practical regexes with repetition are indeed vastly smaller than the corresponding DFAs. More importantly, our prototype matcher based on CsA simulation handles practical regexes with repetition regardless of sizes of counter bounds. It easily copes with regexes with repetition where state-of-the-art matchers struggle.},
journal = {Proc. ACM Program. Lang.},
month = {nov},
articleno = {218},
numpages = {30},
keywords = {regular expression matching, determinization, counting-set automata, counting automata, bounded repetition, ReDos, Antimirov's derivatives}
}

@misc{smt_lib,
  author = "Cesare, Tinelli
and Clark, Barrett
and Pascal, Fontaine",
  title = {SMT-LIB: The Satisfiability Modulo Theories Library},
  year = 2020,
  url = {http://smtlib.cs.uiowa.edu/theories-UnicodeStrings.shtml},
  urldate = {2020-02-11}
}

@inproceedings{regex_repeat,
author = {Chapman, Carl and Wang, Peipei and Stolee, Kathryn T.},
title = {Exploring Regular Expression Comprehension},
year = {2017},
isbn = {9781538626849},
publisher = {IEEE Press},
abstract = {The regular expression (regex) is a powerful tool employed in a large variety of software engineering tasks. However, prior work has shown that regexes can be very complex and that it could be difficult for developers to compose and understand them. This work seeks to identify code smells that impact comprehension. We conduct an empirical study on 42 of pairs of behaviorally equivalent but syntactically different regexes using 180 participants and evaluated the understandability of various regex language features. We further analyzed regexes in GitHub to find the community standards or the common usages of various features. We found that some regex expression representations are more understandable than others. For example, using a range (e.g., [0-9]) is often more understandable than a default character class (e.g., [d]). We also found that the DFA size of a regex significantly affects comprehension for the regexes studied. The larger the DFA of a regex (up to size eight), the more understandable it was. Finally, we identify smelly and non-smelly regex representations based on a combination of community standards and understandability metrics.},
booktitle = {Proceedings of the 32nd IEEE/ACM International Conference on Automated Software Engineering},
pages = {405–416},
numpages = {12},
keywords = {equivalence class, regex representations, Regular expression comprehension},
location = {Urbana-Champaign, IL, USA},
series = {ASE '17}
}

@InProceedings{prog_analysis_1,
author="Amadini, Roberto
and Jordan, Alexander
and Gange, Graeme
and Gauthier, Fran{\c{c}}ois
and Schachte, Peter
and S{\o}ndergaard, Harald
and Stuckey, Peter J.
and Zhang, Chenyi",
editor="Legay, Axel
and Margaria, Tiziana",
title="Combining String Abstract Domains for JavaScript Analysis: An Evaluation",
booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
year="2017",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="41--57",
abstract="Strings play a central role in JavaScript and similar scripting languages. Owing to dynamic features such as the eval function and dynamic property access, precise string analysis is a prerequisite for automated reasoning about practically any kind of runtime property. Although the literature presents a considerable number of abstract domains for capturing and representing specific aspects of strings, we are not aware of tools that allow flexible combination of string abstract domains. Indeed, support for string analysis is often confined to a single, dedicated string domain. In this paper we describe a framework that allows us to combine multiple string abstract domains for the analysis of JavaScript programs. It is implemented as an extension of SAFE, an open-source static analysis tool. We investigate different combinations of abstract domains that capture various aspects of strings. Our evaluation suggests that a combination of a few, simple abstract domains suffice to outperform the precision of state-of-the-art static analysis tools for JavaScript.",
isbn="978-3-662-54577-5"
}

@InProceedings{prog_analysis_2,
author="Bj{\o}rner, Nikolaj
and Tillmann, Nikolai
and Voronkov, Andrei",
editor="Kowalewski, Stefan
and Philippou, Anna",
title="Path Feasibility Analysis for String-Manipulating Programs",
booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
year="2009",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="307--321",
abstract="We discuss the problem of path feasibility for programs manipulating strings using a collection of standard string library functions. We prove results on the complexity of this problem, including its undecidability in the general case and decidability of some special cases. In the context of test-case generation, we are interested in an efficient finite model finding method for string constraints. To this end we develop a two-tier finite model finding procedure. First, an integer abstraction of string constraints are passed to an SMT (Satisfiability Modulo Theories) solver. The abstraction is either unsatisfiable, or the solver produces a model that fixes lengths of enough strings to reduce the entire problem to be finite domain. The resulting fixed-length string constraints are then solved in a second phase. We implemented the procedure in a symbolic execution framework, report on the encouraging results and discuss directions for improving the method further.",
isbn="978-3-642-00768-2"
}

@inproceedings{prog_analysis_3,
author = {Sen, Koushik and Kalasapur, Swaroop and Brutch, Tasneem and Gibbs, Simon},
title = {Jalangi: A Selective Record-Replay and Dynamic Analysis Framework for JavaScript},
year = {2013},
isbn = {9781450322379},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2491411.2491447},
doi = {10.1145/2491411.2491447},
abstract = {JavaScript is widely used for writing client-side web applications and is getting increasingly popular for writing mobile applications. However, unlike C, C++, and Java, there are not that many tools available for analysis and testing of JavaScript applications. In this paper, we present a simple yet powerful framework, called Jalangi, for writing heavy-weight dynamic analyses. Our framework incorporates two key techniques: 1) selective record-replay, a technique which enables to record and to faithfully replay a user-selected part of the program, and 2) shadow values and shadow execution, which enables easy implementation of heavy-weight dynamic analyses. Our implementation makes no special assumption about JavaScript, which makes it applicable to real-world JavaScript programs running on multiple platforms. We have implemented concolic testing, an analysis to track origins of nulls and undefined, a simple form of taint analysis, an analysis to detect likely type inconsistencies, and an object allocation profiler in Jalangi. Our evaluation of Jalangi on the SunSpider benchmark suite and on five web applications shows that Jalangi has an average slowdown of 26X during recording and 30X slowdown during replay and analysis. The slowdowns are comparable with slowdowns reported for similar tools, such as PIN and Valgrind for x86 binaries. We believe that the techniques proposed in this paper are applicable to other dynamic languages.},
booktitle = {Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering},
pages = {488–498},
numpages = {11},
keywords = {Concolic Testing, JavaScript, Record and Repla, Dynamic Analysis},
location = {Saint Petersburg, Russia},
series = {ESEC/FSE 2013}
}

@InProceedings{software_testing_1,
author="Amadini, Roberto
and Andrlon, Mak
and Gange, Graeme
and Schachte, Peter
and  S{\o}ndergaard, Harald
and Stuckey, Peter J.",
editor="Rousseau, Louis-Martin
and Stergiou, Kostas",
title="Constraint Programming for Dynamic Symbolic Execution of JavaScript",
booktitle="Integration of Constraint Programming, Artificial Intelligence, and Operations Research",
year="2019",
publisher="Springer International Publishing",
address="Cham",
pages="1--19",
abstract="Dynamic Symbolic Execution (DSE) combines concrete and symbolic execution, usually for the purpose of generating good test suites automatically. It relies on constraint solvers to solve path conditions and to generate new inputs to explore. DSE tools usually make use of SMT solvers for constraint solving. In this paper, we show that constraint programming (CP) is a powerful alternative or complementary technique for DSE. Specifically, we apply CP techniques for DSE of JavaScript, the de facto standard for web programming. We capture the JavaScript semantics with MiniZinc and integrate this approach into a tool we call Aratha. We use G-Strings, a CP solver equipped with string variables, for solving path conditions, and we compare the performance of this approach against state-of-the-art SMT solvers. Experimental results, in terms of both speed and coverage, show the benefits of our approach, thus opening new research vistas for using CP techniques in the service of program analysis.",
isbn="978-3-030-19212-9"
}

@InProceedings{software_testing_2,
author="Veanes, Margus
and Tillmann, Nikolai
and de Halleux, Jonathan",
editor="Clarke, Edmund M.
and Voronkov, Andrei",
title="Qex: Symbolic SQL Query Explorer",
booktitle="Logic for Programming, Artificial Intelligence, and Reasoning",
year="2010",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="425--446",
abstract="We describe a technique and a tool called Qex for generating input tables and parameter values for a given parameterized SQL query. The evaluation semantics of an SQL query is translated into a specific background theory for a satisfiability modulo theories (SMT) solver as a set of equational axioms. Symbolic evaluation of a goal formula together with the background theory yields a model from which concrete tables and values are extracted. We use the SMT solver Z3 in the concrete implementation of Qex and provide an evaluation of its performance.",
isbn="978-3-642-17511-4"
}

@InProceedings{malware_detection_1,
author="Yu, Fang
and Alkhalaf, Muath
and Bultan, Tevfik",
editor="Esparza, Javier
and Majumdar, Rupak",
title="Stranger: An Automata-Based String Analysis Tool for PHP",
booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
year="2010",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="154--157",
abstract="Stranger is an automata-based string analysis tool for finding and eliminating string-related security vulnerabilities in PHP applications. Stranger uses symbolic forward and backward reachability analyses to compute the possible values that the string expressions can take during program execution. Stranger can automatically (1) prove that an application is free from specified attacks or (2) generate vulnerability signatures that characterize all malicious inputs that can be used to generate attacks.",
isbn="978-3-642-12002-2"
}

@inproceedings{malware_detection_2,
author = {Trinh, Minh-Thai and Chu, Duc-Hiep and Jaffar, Joxan},
title = {S3: A Symbolic String Solver for Vulnerability Detection in Web Applications},
year = {2014},
isbn = {9781450329576},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2660267.2660372},
doi = {10.1145/2660267.2660372},
abstract = {Motivated by the vulnerability analysis of web programs which work on string inputs, we present S3, a new symbolic string solver. Our solver employs a new algorithm for a constraint language that is expressive enough for widespread applicability. Specifically, our language covers all the main string operations, such as those in JavaScript. The algorithm first makes use of a symbolic representation so that membership in a set defined by a regular expression can be encoded as string equations. Secondly, there is a constraint-based generation of instances from these symbolic expressions so that the total number of instances can be limited. We evaluate S3 on a well-known set of practical benchmarks, demonstrating both its robustness (more definitive answers) and its efficiency (about 20 times faster) against the state-of-the-art.},
booktitle = {Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security},
pages = {1232–1243},
numpages = {12},
keywords = {web applications, string constraint solver, string analysis},
location = {Scottsdale, Arizona, USA},
series = {CCS '14}
}

@INPROCEEDINGS{malware_detection_3_kudzu,
  author={Saxena, Prateek and Akhawe, Devdatta and Hanna, Steve and Mao, Feng and McCamant, Stephen and Song, Dawn},
  booktitle={2010 IEEE Symposium on Security and Privacy}, 
  title={A Symbolic Execution Framework for JavaScript}, 
  year={2010},
  volume={},
  number={},
  pages={513-528},
  doi={10.1109/SP.2010.38}}

@misc{smt-comp,
  author = "Haniel Barbosa
  and François Bobot 
  and Jochen Hoenicke",
  title = {The 17th International Satisfiability Modulo Theories Competition (SMT-COMP 2022)},
  year = 2022,
  url = {https://smt-comp.github.io/2022/},
  urldate = {2022-8-10}
}

@InProceedings{theory_z3str3re,
author="Berzish, Murphy
and Day, Joel D.
and Ganesh, Vijay
and Kulczynski, Mitja
and Manea, Florin
and Mora, Federico
and Nowotka, Dirk",
editor="Lecroq, Thierry
and Puzynina, Svetlana",
title="String Theories Involving Regular Membership Predicates: From Practice to Theory and Back",
booktitle="Combinatorics on Words",
year="2021",
publisher="Springer International Publishing",
address="Cham",
pages="50--64",
abstract="Widespread use of string solvers in formal analysis of string-heavy programs has led to a growing demand for more efficient and reliable techniques which can be applied in this context, especially for real-world cases. Designing an algorithm for the (generally undecidable) satisfiability problem for systems of string constraints requires a thorough understanding of the structure of constraints present in the targeted cases. In this paper, we investigate benchmarks presented in the literature containing regular expression membership predicates, extract different first order logic theories, and prove their decidability, resp. undecidability. Notably, the most common theories in real-world benchmarks are {\$}{\$}{\backslash}mathsf {\{}PSPACE{\}}{\$}{\$}PSPACE-complete and directly lead to the implementation of a more efficient algorithm to solving string constraints.",
isbn="978-3-030-85088-3"
}

@misc{automatark,
  author = "Loris D'Antoni",
  title = {Automatark automata benchmark (2018).},
  year = 2018,
  url = {https://github.com/lorisdanto/automatark},
  urldate = {2018-06-24}
}

@inproceedings{regex_lingua_franca,
author = "Davis, James C.
and Michael IV, Louis G. 
and Coghlan, Christy A. 
and Servant, Francisco 
and Lee, Dongyoon",
title = {Why Aren’t Regular Expressions a Lingua Franca? An Empirical Study on the Re-Use and Portability of Regular Expressions},
year = {2019},
isbn = {9781450355728},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3338906.3338909},
doi = {10.1145/3338906.3338909},
abstract = {This paper explores the extent to which regular expressions (regexes) are portable across programming languages. Many languages offer similar regex syntaxes, and it would be natural to assume that regexes can be ported across language boundaries. But can regexes be copy/pasted across language boundaries while retaining their semantic and performance characteristics? In our survey of 158 professional software developers, most indicated that they re-use regexes across language boundaries and about half reported that they believe regexes are a universal language.We experimentally evaluated the riskiness of this practice using a novel regex corpus — 537,806 regexes from 193,524 projects written in JavaScript, Java, PHP, Python, Ruby, Go, Perl, and Rust. Using our polyglot regex corpus, we explored the hitherto-unstudied regex portability problems: logic errors due to semantic differences, and security vulnerabilities due to performance differences. We report that developers’ belief in a regex lingua franca is understandable but unfounded. Though most regexes compile across language boundaries},
booktitle = {Proceedings of the 2019 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
pages = {443–454},
numpages = {12},
keywords = {ReDoS, Regular expressions, re-use, developer perceptions, empirical software engineering, portability, mining software repositories},
location = {Tallinn, Estonia},
series = {ESEC/FSE 2019}
}


@inproceedings{z3str4,
author = {Mora, Federico and Berzish, Murphy and Kulczynski, Mitja and Nowotka, Dirk and Ganesh, Vijay},
title = {Z3str4: A Multi-Armed String Solver},
year = {2021},
isbn = {978-3-030-90869-0},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
url = {https://doi.org/10.1007/978-3-030-90870-6_21},
doi = {10.1007/978-3-030-90870-6_21},
abstract = {We present Z3str4, a new high-performance string SMT solver for a rich quantifier-free first-order theory of strings and length constraints. These kinds of constraints have found widespread application in analysis of string-intensive programs in general, and web applications in particular. Three key contributions underpin our solver: first, a novel length-abstraction algorithm that performs various string-length based abstractions and refinements along with a bit-vector backend; second, an arrangement-based solver with a bit-vector backend; third, an algorithm selection and constraint-sharing architecture which leverages the above-mentioned solvers along with the Z3 sequence (Z3seq) solver. We perform extensive empirical evaluation over 20 different industrial and randomly-generated benchmarks with over 120,000+ instances, and show that Z3str4 outperforms the previous best solvers, namely, CVC4, Z3seq, and Z3str3 in both total solved instances and total runtime.},
booktitle = {Formal Methods: 24th International Symposium, FM 2021, Virtual Event, November 20–26, 2021, Proceedings},
pages = {389–406},
numpages = {18},
keywords = {SMT, String solvers, Program analysis}
}



@article{popl22-full,
  author    = {Taolue Chen and
               Alejandro Flores{-}Lamas and
               Matthew Hague and
               Zhilei Han and
               Denghang Hu and
               Shuanglong Kan and
               Anthony Widjaja Lin and
               Philipp R{\"{u}}mmer and
               Zhilin Wu},
  title     = {Solving String Constraints With Regex-Dependent Functions Through
               Transducers With Priorities And Variables},
  journal   = {CoRR},
  volume    = {abs/2111.04298},
  year      = {2021},
  url       = {https://arxiv.org/abs/2111.04298},
  eprinttype = {arXiv},
  eprint    = {2111.04298},
  timestamp = {Fri, 26 Nov 2021 09:45:16 +0100},
  biburl    = {https://dblp.org/rec/journals/corr/abs-2111-04298.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


@article{Ama20,
	author    = {Roberto Amadini},
	title     = {A Survey on String Constraint Solving},
	journal   = {CoRR},
	volume    = {abs/2002.02376},
	year      = {2020},
	url       = {https://arxiv.org/abs/2002.02376},
	archivePrefix = {arXiv},
	eprint    = {2002.02376},
	timestamp = {Mon, 10 Feb 2020 15:12:57 +0100},
	biburl    = {https://dblp.org/rec/journals/corr/abs-2002-02376.bib},
	bibsource = {dblp computer science bibliography, https://dblp.org}
}


@article{GB16,
	author    = {Vijay Ganesh and
	Murphy Berzish},
	title     = {Undecidability of a Theory of Strings, Linear Arithmetic over Length,
	and String-Number Conversion},
	journal   = {CoRR},
	volume    = {abs/1605.09442},
	year      = {2016},
	url       = {http://arxiv.org/abs/1605.09442}
}

@article{BFL13,
	author    = {Pablo Barcel{\'{o}} and
	Diego Figueira and
	Leonid Libkin},
	title     = {Graph Logics with Rational Relations},
	journal   = {Logical Methods in Computer Science},
	volume    = {9},
	number    = {3},
	year      = {2013},
	url       = {https://doi.org/10.2168/LMCS-9(3:1)2013},
	doi       = {10.2168/LMCS-9(3:1)2013}
}


@inproceedings{ThomeSBB17,
	author    = {Julian Thom{\'{e}} and
	Lwin Khin Shar and
	Domenico Bianculli and
	Lionel C. Briand},
	title     = {Search-driven string constraint solving for vulnerability detection},
	booktitle = {Proceedings of the 39th International Conference on Software Engineering,
	{ICSE} 2017, Buenos Aires, Argentina, May 20-28, 2017},
	pages     = {198--208},
	year      = {2017},
	crossref  = {DBLP:conf/icse/2017},
	url       = {https://doi.org/10.1109/ICSE.2017.26},
	doi       = {10.1109/ICSE.2017.26}
}
@proceedings{DBLP:conf/icse/2017,
	editor    = {Sebasti{\'{a}}n Uchitel and
	Alessandro Orso and
	Martin P. Robillard},
	title     = {Proceedings of the 39th International Conference on Software Engineering,
	{ICSE} 2017, Buenos Aires, Argentina, May 20-28, 2017},
	publisher = {{IEEE} / {ACM}},
	year      = {2017},
	url       = {http://dl.acm.org/citation.cfm?id=3097368},
	isbn      = {978-1-5386-3868-2}
}


@inproceedings{AbdullaACDHRR18-trau,
	author    = {Parosh Aziz Abdulla and
	Mohamed Faouzi Atig and
	Yu{-}Fang Chen and
	Bui Phi Diep and
	Luk{\'{a}}s Hol{\'{\i}}k and
	Ahmed Rezine and
	Philipp R{\"{u}}mmer},
	title     = {Trau: {SMT} solver for string constraints},
	booktitle = {2018 Formal Methods in Computer Aided Design, {FMCAD} 2018, Austin,
	TX, USA, October 30 - November 2, 2018},
	pages     = {1--5},
	year      = {2018},
	crossref  = {DBLP:conf/fmcad/2018},
	url       = {https://doi.org/10.23919/FMCAD.2018.8602997},
	doi       = {10.23919/FMCAD.2018.8602997}
}
@proceedings{DBLP:conf/fmcad/2018,
	editor    = {Nikolaj Bj{\o}rner and
	Arie Gurfinkel},
	title     = {2018 Formal Methods in Computer Aided Design, {FMCAD} 2018, Austin,
	TX, USA, October 30 - November 2, 2018},
	publisher = {{IEEE}},
	year      = {2018},
	url       = {https://ieeexplore.ieee.org/xpl/conhome/8585253/proceeding},
	isbn      = {978-0-9835678-8-2}
}

@inproceedings{Saner08,
	author    = {Davide Balzarotti and
	Marco Cova and
	Viktoria Felmetsger and
	Nenad Jovanovic and
	Engin Kirda and
	Christopher Kruegel and
	Giovanni Vigna},
	title     = {Saner: Composing Static and Dynamic Analysis to Validate Sanitization
	in Web Applications},
	booktitle = {2008 {IEEE} Symposium on Security and Privacy (S{\&}P 2008), 18-21
	May 2008, Oakland, California, {USA}},
	pages     = {387--401},
	year      = {2008},
	url       = {https://doi.org/10.1109/SP.2008.22},
	doi       = {10.1109/SP.2008.22},
	timestamp = {Fri, 26 May 2017 00:50:06 +0200},
	biburl    = {http://dblp.uni-trier.de/rec/bib/conf/sp/BalzarottiCFJKKV08},
	bibsource = {dblp computer science bibliography, http://dblp.org}
}

@article{HJLRV18,
	author    = {Luk{\'{a}}s Hol{\'{\i}}k and
	Petr Janku and
	Anthony W. Lin and
	Philipp R{\"{u}}mmer and
	Tom{\'{a}}s Vojnar},
	title     = {String constraints with concatenation and transducers solved efficiently},
	journal   = {{PACMPL}},
	volume    = {2},
	number    = {{POPL}},
	pages     = {4:1--4:32},
	year      = {2018},
	url       = {http://doi.acm.org/10.1145/3158092},
	doi       = {10.1145/3158092}
}

@inproceedings{Z3-str2,
	author    = {Yunhui Zheng and
	Vijay Ganesh and
	Sanu Subramanian and
	Omer Tripp and
	Julian Dolby and
	Xiangyu Zhang},
	title     = {Effective Search-Space Pruning for Solvers of String Equations, Regular
	Expressions and Length Constraints},
	booktitle = {Computer Aided Verification - 27th International Conference, {CAV}
	2015, San Francisco, CA, USA, July 18-24, 2015, Proceedings, Part
	{I}},
	pages     = {235--254},
	year      = {2015},
	url       = {http://dx.doi.org/10.1007/978-3-319-21690-4_14},
	doi       = {10.1007/978-3-319-21690-4_14},
	timestamp = {Mon, 20 Jul 2015 11:27:14 +0200},
	biburl    = {http://dblp.uni-trier.de/rec/bib/conf/cav/ZhengGSTDZ15},
	bibsource = {dblp computer science bibliography, http://dblp.org},
	publisher = {Springer},
}

@inproceedings{ReynoldsWBBLT17,
	author    = {Andrew Reynolds and
	Maverick Woo and
	Clark W. Barrett and
	David Brumley and
	Tianyi Liang and
	Cesare Tinelli},
	title     = {Scaling Up {DPLL(T)} String Solvers Using Context-Dependent Simplification},
	booktitle = {Computer Aided Verification - 29th International Conference, {CAV}
	2017, Heidelberg, Germany, July 24-28, 2017, Proceedings, Part {II}},
	pages     = {453--474},
	year      = {2017},
	crossref  = {DBLP:conf/cav/2017-2},
	url       = {https://doi.org/10.1007/978-3-319-63390-9\_24},
	doi       = {10.1007/978-3-319-63390-9\_24} 
}
@proceedings{DBLP:conf/cav/2017-2,
	editor    = {Rupak Majumdar and
	Viktor Kuncak},
	title     = {Computer Aided Verification - 29th International Conference, {CAV}
	2017, Heidelberg, Germany, July 24-28, 2017, Proceedings, Part {II}},
	series    = {Lecture Notes in Computer Science},
	volume    = {10427},
	publisher = {Springer},
	year      = {2017},
	url       = {https://doi.org/10.1007/978-3-319-63390-9},
	doi       = {10.1007/978-3-319-63390-9},
	isbn      = {978-3-319-63389-3} 
}

@book{Diestel05,
    author = {Reinhard Diestel},
    title = {Graph Theory},
    year = {2005},
    publisher = {Springer},
    series  = {Graduate Texts in Mathematics},
    edition = {Third} 
}

@article{P04,
	author    = {Wojciech Plandowski},
	title     = {Satisfiability of word equations with constants is in {PSPACE}},
	journal   = {J. {ACM}},
	volume    = {51},
	number    = {3},
	pages     = {483--496},
	year      = {2004},
	url       = {http://doi.acm.org/10.1145/990308.990312},
	doi       = {10.1145/990308.990312},
	timestamp = {Thu, 09 Feb 2006 13:34:10 +0100},
	biburl    = {http://dblp.uni-trier.de/rec/bib/journals/jacm/Plandowski04},
	bibsource = {dblp computer science bibliography, http://dblp.org}
}


@article{J17,
	author    = {Artur Jez},
	title     = {Word equations in linear space},
	journal   = {CoRR},
	volume    = {abs/1702.00736},
	year      = {2017},
	url       = {http://arxiv.org/abs/1702.00736},
	timestamp = {Wed, 07 Jun 2017 14:40:11 +0200},
	biburl    = {http://dblp.uni-trier.de/rec/bib/journals/corr/Jez17},
	bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{Jez17,
  author    = {Artur Jez},
  title     = {Word Equations in Nondeterministic Linear Space},
  booktitle = {44th International Colloquium on Automata, Languages, and Programming,
               {ICALP} 2017, July 10-14, 2017, Warsaw, Poland},
  pages     = {95:1--95:13},
  year      = {2017},
}



@article{J16,
	author    = {Artur Jez},
	title     = {Recompression: {A} Simple and Powerful Technique for Word Equations},
	journal   = {J. {ACM}},
	volume    = {63},
	number    = {1},
	pages     = {4:1--4:51},
	year      = {2016},
	url       = {http://doi.acm.org/10.1145/2743014},
	doi       = {10.1145/2743014},
	timestamp = {Fri, 09 Dec 2016 13:15:44 +0100},
	biburl    = {http://dblp.uni-trier.de/rec/bib/journals/jacm/Jez16},
	bibsource = {dblp computer science bibliography, http://dblp.org}
}

@article{L16,
	author    = {Quang Loc Le},
	title     = {A Decision Procedure for String Logic with Equations, Regular Membership
	and Length Constraints},
	journal   = {CoRR},
	volume    = {abs/1610.01331},
	year      = {2016},
	url       = {http://arxiv.org/abs/1610.01331},
	timestamp = {Wed, 07 Jun 2017 14:40:23 +0200},
	biburl    = {http://dblp.uni-trier.de/rec/bib/journals/corr/Le16b},
	bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{LeH18,
  author    = {Quang Loc Le and
               Mengda He},
  title     = {A Decision Procedure for String Logic with Quadratic Equations, Regular
               Expressions and Length Constraints},
  booktitle = {Programming Languages and Systems - 16th Asian Symposium, {APLAS}
               2018, Wellington, New Zealand, December 2-6, 2018, Proceedings},
  pages     = {350--372},
  year      = {2018},
}

@proceedings{DBLP:conf/cav/2016-1,
	editor    = {Swarat Chaudhuri and
	Azadeh Farzan},
	title     = {Computer Aided Verification - 28th International Conference, {CAV}
	2016, Toronto, ON, Canada, July 17-23, 2016, Proceedings, Part {I}},
	series    = {Lecture Notes in Computer Science},
	volume    = {9779},
	publisher = {Springer},
	year      = {2016},
	url       = {https://doi.org/10.1007/978-3-319-41528-4},
	doi       = {10.1007/978-3-319-41528-4},
	isbn      = {978-3-319-41527-7},
	timestamp = {Thu, 25 May 2017 00:39:07 +0200},
	biburl    = {http://dblp.uni-trier.de/rec/bib/conf/cav/2016-1},
	bibsource = {dblp computer science bibliography, http://dblp.org}
}

booktitle = {Proceedings of the 43rd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},

@inproceedings{LB16,
 author = {Lin, Anthony W. and Barcel\'{o}, Pablo},
 title = {String Solving with Word Equations and Transducers: Towards a Logic for Analysing Mutation {XSS}},
 series = {POPL '16},
 year = {2016},
 pages = {123--136},
 publisher = {ACM},
  url       = {https://doi.org/10.1145/2837614.2837641},
  doi       = {10.1145/2837614.2837641},
} 

@inproceedings{TCJ16,
  author    = {Minh{-}Thai Trinh and
               Duc{-}Hiep Chu and
               Joxan Jaffar},
  title     = {Progressive Reasoning over Recursively-Defined Strings},
  booktitle = {Computer Aided Verification - 28th International Conference, {CAV}
               2016, Toronto, ON, Canada, July 17-23, 2016, Proceedings, Part {I}},
  pages     = {218--240},
  year      = {2016},
  publisher = {Springer},
  url       = {https://doi.org/10.1007/978-3-319-41528-4\_12},
  doi       = {10.1007/978-3-319-41528-4\_12},
}

@article{YABI14,
 author = {Yu, Fang and Alkhalaf, Muath and Bultan, Tevfik and Ibarra, Oscar H.},
 title = {Automata-based Symbolic String Analysis for Vulnerability Detection},
 journal = {Form. Methods Syst. Des.},
 issue_date = {February  2014},
 volume = {44},
 number = {1},
 year = {2014},
 pages = {44--70},
  url       = {https://doi.org/10.1007/s10703-013-0189-1},
  doi       = {10.1007/s10703-013-0189-1},
 } 
 
 @book{HU79,
  author    = {John E. Hopcroft and
               Jeffrey D. Ullman},
  title     = {Introduction to Automata Theory, Languages and Computation},
  publisher = {Addison-Wesley},
  year      = {1979},
}

@article{Makanin,
  title={The problem of solvability of equations in a free semigroup},
  author={Makanin, Gennady S},
  journal={Sbornik: Mathematics},
  volume={32},
  number={2},
  pages={129--198},
  year={1977},
  publisher={Turpion Ltd}
}

@inproceedings{Gut98,
  author    = {Claudio Guti{\'e}rrez},
  title     = {Solving Equations in Strings: On Makanin's Algorithm},
  booktitle = {LATIN},
  year      = {1998},
  pages     = {358-373},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@Incollection{diekert,
   title = "Makanin's {A}lgorithm",
   year = "2002",
   volume = "90",
   pages = "387--442",
   file_url = "[PS] http://www2.informatik.uni-stuttgart.de/fmi/ti/veroeffentlichungen/psfiles/Diekert98makanin.ps",
   web_url2 = "[\copyright Cambridge University Press] http://www.cambridge.org/gb/knowledge/isbn/item5759568/",
   editor = "M. Lothaire",
   publisher = "Cambridge University Press",
   series = "Encyclopedia of Mathematics and its Applications",
   chapter = "12",
   booktitle = "Algebraic Combinatorics on Words",
   author = "Diekert, Volker"
}

@article{Plandowski,
  author    = {Wojciech Plandowski},
  title     = {Satisfiability of word equations with constants is in {PSPACE}},
  journal   = {J. ACM},
  volume    = {51},
  number    = {3},
  year      = {2004},
  pages     = {483-496},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}


@article{king76,
  author    = {James C. King},
  title     = {Symbolic Execution and Program Testing},
  journal   = {Commun. {ACM}},
  volume    = {19},
  number    = {7},
  pages     = {385--394},
  year      = {1976},
  doi       = {10.1145/360248.360252},
  timestamp = {Tue, 07 Jun 2011 16:51:04 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/cacm/King76},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{EXE,
 author = {Cadar, Cristian and , Vijay and Pawlowski, Peter M. and Dill, David L. and Engler, Dawson R.},
 title = {EXE: Automatically Generating Inputs of Death},
 booktitle = {Proceedings of the 13th ACM Conference on Computer and Communications Security},
 series = {CCS '06},
 year = {2006},
 isbn = {1-59593-518-5},
 location = {Alexandria, Virginia, USA},
 pages = {322--335},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/1180405.1180445},
 doi = {10.1145/1180405.1180445},
 acmid = {1180445},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {attack generation, bug finding, constraint solving, dynamic analysis, symbolic execution, test case generation},
}

@article{DART,
 author = {Godefroid, Patrice and Klarlund, Nils and Sen, Koushik},
 title = {DART: Directed Automated Random Testing},
 journal = {SIGPLAN Not.},
 issue_date = {June 2005},
 volume = {40},
 number = {6},
 month = jun,
 year = {2005},
 issn = {0362-1340},
 pages = {213--223},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/1064978.1065036},
 doi = {10.1145/1064978.1065036},
 acmid = {1065036},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {automated test generation, interfaces, program verification, random testing, software testing},
}


@inproceedings{S3,
  author    = {Minh{-}Thai Trinh and
               Duc{-}Hiep Chu and
               Joxan Jaffar},
  title     = {{S3:} {A} Symbolic String Solver for Vulnerability Detection in Web
               Applications},
  booktitle = {CCS},
  pages     = {1232--1243},
  year      = {2014},
  url       = {https://doi.org/10.1145/2660267.2660372},
  doi       = {10.1145/2660267.2660372},
}

@inproceedings{Abdulla17,
  author    = {Parosh Aziz Abdulla and
               Mohamed Faouzi Atig and
               Yu{-}Fang Chen and
               Bui Phi Diep and
               Luk{\'{a}}s Hol{\'{\i}}k and
               Ahmed Rezine and
               Philipp R{\"{u}}mmer},
  title     = {Flatten and conquer: a framework for efficient analysis of string
               constraints},
  booktitle = {Proceedings of the 38th {ACM} {SIGPLAN} Conference on Programming
               Language Design and Implementation, {PLDI} 2017, Barcelona, Spain,
               June 18-23, 2017},
  pages     = {602--617},
  year      = {2017},
  url       = {http://doi.acm.org/10.1145/3062341.3062384},
  doi       = {10.1145/3062341.3062384},
  timestamp = {Mon, 19 Jun 2017 08:37:26 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/pldi/AbdullaACDHRR17},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}


@inproceedings{DV13,
  author    = {Loris D'Antoni and
               Margus Veanes},
  title     = {Static Analysis of String Encoders and Decoders},
  booktitle = {VMCAI},
  pages     = {209--228},
  year      = {2013}
}

@inproceedings{symbolic-transducer,
  author    = {Margus Veanes and
               Pieter Hooimeijer and
               Benjamin Livshits and
               David Molnar and
               Nikolaj Bj{\o}rner},
  title     = {Symbolic finite state transducers: algorithms and applications},
  booktitle = {POPL},
  year      = {2012},
  pages     = {137-150},
}

@inproceedings{BEK,
  author    = {Pieter Hooimeijer and
               Benjamin Livshits and
               David Molnar and
               Prateek Saxena and
               Margus Veanes},
  title     = {Fast and Precise Sanitizer Analysis with {BEK}},
  booktitle = {{USENIX} Security Symposium},
  year      = {2011},
  url       = {http://static.usenix.org/events/sec11/tech/full\_papers/Hooimeijer.pdf},
}

@inproceedings{Schulz,
  author    = {Klaus U. Schulz},
  title     = {Makanin's Algorithm for Word Equations - Two Improvements and a Generalization},
  booktitle = {Word Equations and Related Topics, First International Workshop, {IWWERT}
               '90, T{\"{u}}bingen, Germany, October 1-3, 1990, Proceedings},
  pages     = {85--150},
  year      = {1990},
  url       = {http://dx.doi.org/10.1007/3-540-55124-7_4},
  doi       = {10.1007/3-540-55124-7_4},
  timestamp = {Tue, 14 Jun 2011 20:34:26 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/iwwert/Schulz90},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{Vijay-length,
  author    = {Vijay Ganesh and
               Mia Minnes and
               Armando Solar{-}Lezama and
               Martin C. Rinard},
  title     = {Word Equations with Length Constraints: What's Decidable?},
  booktitle = {Hardware and Software: Verification and Testing - 8th International
               Haifa Verification Conference, {HVC} 2012, Haifa, Israel, November
               6-8, 2012. Revised Selected Papers},
  pages     = {209--226},
  year      = {2012},
  url       = {http://dx.doi.org/10.1007/978-3-642-39611-3_21},
  doi       = {10.1007/978-3-642-39611-3_21},
  timestamp = {Tue, 09 Jul 2013 14:14:21 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/hvc/GaneshMSR12},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@incollection{buchi,
  title={Definability in the existential theory of concatenation and undecidable extensions of this theory},
  author={B{\"u}chi, J Richard and Senger, Steven},
  booktitle={The Collected Works of J. Richard B{\"u}chi},
  pages={671--683},
  year={1990},
  publisher={Springer}
}

@article{Kern14,
  author    = {Christoph Kern},
  title     = {Securing the tangled web},
  journal   = {Commun. {ACM}},
  volume    = {57},
  number    = {9},
  pages     = {38--47},
  year      = {2014},
  url       = {http://doi.acm.org/10.1145/2643134},
  doi       = {10.1145/2643134},
  timestamp = {Thu, 04 Sep 2014 13:13:03 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/cacm/Kern14},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@misc{OWASP-XSS,
    author = {Jeff Williams and Jim Manico and Neil Mattatall},
    title = {XSS Prevention Cheat Sheet},
    note = {Referred July 2017},
    year = {2017},
    howpublished = {\url{https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet}},
}

@book{Mat93,
 author = {Matiyasevich, Yuri V.},
 title = {Hilbert's Tenth Problem},
 year = {1993},
 publisher = {MIT Press},
 address = {Cambridge, MA, USA},
} 

@article{ID04,
  author    = {Oscar H. Ibarra and
               Zhe Dang},
  title     = {On two-way {FA} with monotonic counters and quadratic Diophantine
               equations},
  journal   = {Theor. Comput. Sci.},
  volume    = {312},
  number    = {2-3},
  pages     = {359--378},
  year      = {2004},
}

@inproceedings{RVG12,
  author    = {Gideon Redelinghuys and
               Willem Visser and
               Jaco Geldenhuys},
  title     = {Symbolic execution of programs with strings},
  booktitle = {SAICSIT}, 
  year      = {2012},
  pages     = {139--148}
}

@inproceedings{DHK16,
  author    = {Przemyslaw Daca and
               Thomas A. Henzinger and
               Andrey Kupriyanov},
  title     = {Array Folds Logic},
  booktitle = {Computer Aided Verification - 28th International Conference, {CAV}
               2016, Toronto, ON, Canada, July 17-23, 2016, Proceedings, Part {II}},
  pages     = {230--248},
  year      = {2016},
}

@inproceedings{AC10,
  author    = {Rajeev Alur and
               Pavol Cern{\'{y}}},
  title     = {Expressiveness of streaming string transducers},
  booktitle = {{IARCS} Annual Conference on Foundations of Software Technology and
               Theoretical Computer Science, {FSTTCS} 2010, December 15-18, 2010,
               Chennai, India},
  pages     = {1--12},
  year      = {2010},
  url       = {https://doi.org/10.4230/LIPIcs.FSTTCS.2010.1},
}

@inproceedings{Z3-str,
  title={{Z3-str: a Z3-based string solver for web application analysis}},
  author={Zheng, Yunhui and Zhang, Xiangyu and Ganesh, Vijay},
  booktitle={{ESEC/SIGSOFT FSE}},
  pages={114--124},
  year={2013},
url = {https://doi.org/10.1145/2491411.2491456},
doi = {10.1145/2491411.2491456},
}

@inproceedings{Z3-str3,
  author    = {Murphy Berzish and
               Vijay Ganesh and
               Yunhui Zheng},
  title     = {Z3str3: {A} string solver with theory-aware heuristics},
  booktitle = {2017 Formal Methods in Computer Aided Design, {FMCAD} 2017, Vienna,
               Austria, October 2-6, 2017},
  pages     = {55--59},
  year      = {2017},
  url       = {https://doi.org/10.23919/FMCAD.2017.8102241},
}

@inproceedings{cvc4,
  author    = {Tianyi Liang and
               Andrew Reynolds and
               Cesare Tinelli and
               Clark Barrett and
               Morgan Deters},
  title     = {A {DPLL(T)} Theory Solver for a Theory of Strings and Regular Expressions},
  booktitle = {{CAV}},
  year      = {2014},
  pages     = {646--662},
  timestamp = {Thu, 16 Oct 2014 09:36:43 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/cav/LiangRTBD14},
  bibsource = {dblp computer science bibliography, http://dblp.org},
  url       = {https://doi.org/10.1007/978-3-319-08867-9\_43},
  doi       = {10.1007/978-3-319-08867-9\_43},
}


@inproceedings{Stranger,
  author    = {Fang Yu and
               Muath Alkhalaf and
               Tevfik Bultan},
  title     = {Stranger: An Automata-Based String Analysis Tool for {PHP}},
  booktitle = {TACAS},
  year      = {2010},
  pages     = {154-157},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  note = {Benchmark can be found at \url{http://www.cs.ucsb.edu/~vlab/stranger/}},
  url       = {https://doi.org/10.1007/978-3-642-12002-2\_13},
  doi       = {10.1007/978-3-642-12002-2\_13},
}

@inproceedings{Abdulla14,
  author    = {Parosh Aziz Abdulla and
               Mohamed Faouzi Atig and
               Yu{-}Fang Chen and
               Luk{\'{a}}s Hol{\'{\i}}k and
               Ahmed Rezine and
               Philipp R{\"{u}}mmer and
               Jari Stenman},
  title     = {String Constraints for Verification},
  booktitle = {{CAV}},
  year      = {2014},
  pages     = {150--166},
    url       = { https://doi.org/10.1007/978-3-319-08867-9_10},
}

@book{McMillan,
  author    = {K. L. McMillan},
  title     = {Symbolic model checking},
  publisher = {Kluwer},
  year      = {1993}
}

@book{BK08,
 author = {Baier, Christel and Katoen, Joost-Pieter},
 title = {Principles of Model Checking (Representation and Mind Series)},
 year = {2008},
 publisher = {The MIT Press},
}

@misc{Mustache,
    author = {Chris Wanstrath},
    title = {Mustache: Logic-less Templates},
    howpublished = {\url{https://mustache.github.io/}},
    note = {Referred July 2017.},
    year = {2009}
}

@misc{MustacheJS,
    author = {Jan Lehnardt and contributors},
    title = {mustache.js},
    howpublished = {\url{https://github.com/janl/mustache.js/}},
    note = {Referred July 2017.},
    year = {2015}
}

@misc{MustacheSingleQuote,
    title = {Add single quote to list of characters escaped},
    author = {pinterface},
    year = {2013},
    howpublished = {\url{https://github.com/mustache/spec/issues/69}},
    note = {Referred July 2017.}
}

@inproceedings{BCFJKKV08,
  author    = {Davide Balzarotti and
               Marco Cova and
               Viktoria Felmetsger and
               Nenad Jovanovic and
               Engin Kirda and
               Christopher Kruegel and
               Giovanni Vigna},
  title     = {Saner: Composing Static and Dynamic Analysis to Validate Sanitization
               in Web Applications},
  booktitle = {2008 {IEEE} Symposium on Security and Privacy (S{\&}P 2008), 18-21
               May 2008, Oakland, California, {USA}},
  pages     = {387--401},
  year      = {2008},
  url       = {https://doi.org/10.1109/SP.2008.22},
  doi       = {10.1109/SP.2008.22},
  timestamp = {Fri, 26 May 2017 00:50:06 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/sp/BalzarottiCFJKKV08},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{Berkeley-JavaScript,
  author    = {Prateek Saxena and
               Devdatta Akhawe and
               Steve Hanna and
               Feng Mao and
               Stephen McCamant and
               Dawn Song},
  title     = {A Symbolic Execution Framework for JavaScript},
  booktitle = {31st {IEEE} Symposium on Security and Privacy, S{\&}P 2010, 16-19
               May 2010, Berleley/Oakland, California, {USA}},
  pages     = {513--528},
  year      = {2010},
  url       = {https://doi.org/10.1109/SP.2010.38},
  doi       = {10.1109/SP.2010.38},
  timestamp = {Fri, 26 May 2017 00:50:06 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/sp/SaxenaAHMMS10},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@misc{Closure,
    title = {Closure Templates},
    author = {Google},
    howpublished = {\url{https://developers.google.com/closure/templates/}},
    note = {Referred July 2017.},
    year = {2015}
}

@inproceedings{SSS11,
 author = {Samuel, Mike and Saxena, Prateek and Song, Dawn},
 title = {Context-sensitive Auto-sanitization in Web Templating Languages Using Type Qualifiers},
 booktitle = {Proceedings of the 18th ACM Conference on Computer and Communications Security},
 series = {CCS '11},
 year = {2011},
 isbn = {978-1-4503-0948-6},
 location = {Chicago, Illinois, USA},
 pages = {587--600},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2046707.2046775},
 doi = {10.1145/2046707.2046775},
 acmid = {2046775},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {cross-site scripting, type systems, web frameworks},
}

@inproceedings{fang-yu-circuits,
  author    = {Hung{-}En Wang and
               Tzung{-}Lin Tsai and
               Chun{-}Han Lin and
               Fang Yu and
               Jie{-}Hong R. Jiang},
  title     = {String Analysis via Automata Manipulation with Logic Circuit Representation},
  booktitle = {Computer Aided Verification - 28th International Conference, {CAV}
               2016, Toronto, ON, Canada, July 17-23, 2016, Proceedings, Part {I}},
  pages     = {241--260},
  series    = {Lecture Notes in Computer Science},
  volume    = {9779},
  publisher = {Springer},
  year      = {2016},
  url       = {http://dx.doi.org/10.1007/978-3-319-41528-4},
  doi       = {10.1007/978-3-319-41528-4},
  isbn      = {978-3-319-41527-7},
  timestamp = {Wed, 13 Jul 2016 09:31:03 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/cav/2016-1},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{jalangi,
  author    = {Koushik Sen and
               Swaroop Kalasapur and
               Tasneem G. Brutch and
               Simon Gibbs},
  title     = {Jalangi: a selective record-replay and dynamic analysis framework
               for JavaScript},
  booktitle = {Joint Meeting of the European Software Engineering Conference and
               the {ACM} {SIGSOFT} Symposium on the Foundations of Software Engineering,
               ESEC/FSE'13, Saint Petersburg, Russian Federation, August 18-26, 2013},
  pages     = {488--498},
  year      = {2013},
  url       = {http://doi.acm.org/10.1145/2491411.2491447},
  doi       = {10.1145/2491411.2491447},
  timestamp = {Sat, 31 Aug 2013 17:43:06 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/sigsoft/SenKBG13},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{BTV09,
  title={Path feasibility analysis for string-manipulating programs},
  author={Bj{\o}rner, Nikolaj and Tillmann, Nikolai and Voronkov, Andrei},
  booktitle={TACAS},
  pages={307--321},
  year={2009},
}

@inproceedings{RLJ+13,
 author = {Alur, Rajeev and D'Antoni, Loris and Deshmukh, Jyotirmoy and Raghothaman, Mukund and Yuan, Yifei},
 title = {Regular Functions and Cost Register Automata},
 booktitle = {Proceedings of the 2013 28th Annual ACM/IEEE Symposium on Logic in Computer Science},
 series = {LICS '13},
 year = {2013},
 pages = {13--22},
 publisher = {IEEE Computer Society},
} 

@article{CHL+19,
author = {Chen, Taolue and Hague, Matthew and Lin, Anthony W. and R\"{u}mmer, Philipp and Wu, Zhilin},
title = {Decision Procedures for Path Feasibility of String-Manipulating Programs with Complex Operations},
year = {2019},
publisher = {Association for Computing Machinery},
volume = {3},
number = {{POPL}},
doi = {10.1145/3290362},
journal = {PACMPL},
month = jan,
articleno = {Article 49},
numpages = {30},
}

@article{CCH+18,
  author    = {Taolue Chen and
               Yan Chen and
               Matthew Hague and
               Anthony W. Lin and
               Zhilin Wu},
  title     = {What is decidable about string constraints with the ReplaceAll function},
  journal   = {{PACMPL}},
  volume    = {2},
  number    = {{POPL}},
  pages     = {3:1--3:29},
  year      = {2018},
  url       = {https://doi.org/10.1145/3158091},
 }
 
 
@inproceedings{WC+18,
author = {Wang, Hung-En and Chen, Shih-Yu and Yu, Fang and Jiang, Jie-Hong R.},
title = {A Symbolic Model Checking Approach to the Analysis of String and Length Constraints},
year = {2018},
publisher = {ACM},
doi = {10.1145/3238147.3238189},
booktitle = {Proceedings of the 33rd ACM/IEEE International Conference on Automated Software Engineering},
pages = {623–633},
numpages = {11},
series = {ASE 2018}
}

@inproceedings{AbdullaA+19,
  author    = {Parosh Aziz Abdulla and
               Mohamed Faouzi Atig and
               Bui Phi Diep and
               Luk{\'{a}}s Hol{\'{\i}}k and
               Petr Janku},
  title     = {Chain-Free String Constraints},
  booktitle = {Automated Technology for Verification and Analysis - 17th International
               Symposium, {ATVA} 2019, Taipei, Taiwan, October 28-31, 2019, Proceedings},
  pages     = {277--293},
  year      = {2019},
  doi       = {10.1007/978-3-030-31784-3\_16},
}

@inproceedings{SSMH04,
  author    = {Helmut Seidl and
               Thomas Schwentick and
               Anca Muscholl and
               Peter Habermehl},
  title     = {Counting in Trees for Free},
  booktitle = {Automata, Languages and Programming: 31st International Colloquium,
               {ICALP} 2004, Turku, Finland, July 12-16, 2004. Proceedings},
  pages     = {1136--1149},
  year      = {2004},
  doi       = {10.1007/978-3-540-27836-8\_94},
}

@article{GS78,
author = {Gathen, Joachim and Sieveking, Malte},
year = {1978},
month = {10},
pages = {155-155},
title = {A Bound on Solutions of Linear Integer Equalities and Inequalities},
volume = {72},
journal = {Proceedings of The American Mathematical Society - PROC AMER MATH SOC},
doi = {10.2307/2042554}
}

@article{BT76,
 author = {I. Borosh and L. B. Treybig},
 journal = {Proceedings of the American Mathematical Society},
 number = {2},
 pages = {299--304},
 publisher = {American Mathematical Society},
 title = {Bounds on Positive Integral Solutions of Linear Diophantine Equations},
 volume = {55},
 year = {1976}
}


@article{Haase18,
author = {Haase, Christoph},
title = {A Survival Guide to Presburger Arithmetic},
year = {2018},
publisher = {Association for Computing Machinery},
volume = {5},
number = {3},
doi = {10.1145/3242953.3242964},
journal = {ACM SIGLOG News},
pages = {67–82},
}

@book{complexity-book,
  author = {Papadimitriou, Christos H.},
  isbn = {978-0-201-53082-7},
  pages = {I-XV, 1-523},
  publisher = {Addison-Wesley},
  title = {Computational complexity.},
  year = 1994
}


@inproceedings{KLEE,
 author = {Cadar, Cristian and Dunbar, Daniel and Engler, Dawson},
 title = {KLEE: Unassisted and Automatic Generation of High-coverage Tests for Complex Systems Programs},
 booktitle = {Proceedings of the 8th USENIX Conference on Operating Systems Design and Implementation},
 series = {OSDI'08},
 year = {2008},
 location = {San Diego, California},
 pages = {209--224},
 numpages = {16},
 url = {http://dl.acm.org/citation.cfm?id=1855741.1855756},
 acmid = {1855756},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
} 

@inproceedings{CUTE,
    author = "Sen, Koushik and Marinov, Darko and Agha, Gul",
    title = "CUTE: a concolic unit testing engine for C",
    booktitle = {Proceedings of the 10th European Software Engineering Conference held
               jointly with 13th {ACM} {SIGSOFT} International Symposium on Foundations
               of Software Engineering, 2005, Lisbon, Portugal, September 5-9, 2005, {ESEC/SIGSOFT FSE} 2005},
    pages = "263-272",
    year = "2005",
    doi       = {10.1145/1081706.1081750},
    publisher = {{ACM}},
}

@misc{owasp17,
    author = {Andrew van der Stock and Brian Glas and Neil Smithline and Torsten
    Gigler},
    title = {{OWASP} {T}op 10 -- 2017},
    note = {Referred January 2018},
    year = {2017},
    howpublished = {\url{https://www.owasp.org/index.php/Top_10-2017_Top_10}}
}

@misc{url-reflect,
    title = {URL Reflection Attacks},
    howpublished = {\url{https://sites.google.com/site/xssvulnerabilities/types-of-javascript-injection/url-reflection-attacks}}
}



@article{symbex-survey,
 author = {Cadar, Cristian and Sen, Koushik},
 title = {Symbolic Execution for Software Testing: Three Decades Later},
 journal = {Commun. ACM},
 issue_date = {February 2013},
 volume = {56},
 number = {2},
 month = feb,
 year = {2013},
 issn = {0001-0782},
 pages = {82--90},
 numpages = {9},
 url = {http://doi.acm.org/10.1145/2408776.2408795},
 doi = {10.1145/2408776.2408795},
 acmid = {2408795},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@misc{Z3-trau,
    author = {Diep Bui and contributors},
    title = {Z3-Trau},
    howpublished = {\url{https://github.com/diepbp/z3-trau}
    },
    year = {2019}
}

@misc{htmlEscape,
    title = {The htmlEscape sanitisation operator},
    howpublished = {\url{https://github.com/google/closure-library/blob/master/closure/goog/string/string.js#L549}},
}

@misc{escapeString,
    title = {The escapeString sanitisation operator},
    howpublished = {\url{https://github.com/google/closure-library/blob/master/closure/goog/string/string.js#L878}},
}

@misc{addslashes,
    title = {The addslashes operator},
    howpublished = {\url{http://php.net/manual/en/function.addslashes.php}},
}

@misc{trim,
    title = {The trim sanitisation operator},
    howpublished = {\url{https://www.php.net/manual/en/function.trim.php}},
}

@misc{ABC,
    author = {Tevfik Bultan and contributors},
    title = {ABC string solver},
    howpublished = {\url{https://github.com/vlab-cs-ucsb/ABC}},
    year = {2015}
}

@inproceedings{LinM18,
  author    = {Anthony W. Lin and
               Rupak Majumdar},
  title     = {Quadratic Word Equations with Length Constraints, Counter Systems,
               and Presburger Arithmetic with Divisibility},
  booktitle = {Automated Technology for Verification and Analysis - 16th International
               Symposium, {ATVA} 2018, Los Angeles, CA, USA, October 7-10, 2018,
               Proceedings},
  pages     = {352--369},
  year      = {2018},
}

@InProceedings{princess08,
  author =      {Philipp R{\"u}mmer},
  title =       {A Constraint Sequent Calculus for First-Order Logic with
                 Linear Integer Arithmetic},
  booktitle =    {Logic for Programming, Artificial Intelligence, and Reasoning, 15th
               International Conference, {LPAR} 2008, LNCS 5330},
  year =         2008,
    pages     = {274-289},
    doi       = {10.1007/978-3-540-89439-1\_20},
    publisher =  { Springer},
}

@inproceedings{nuxmv,
  author    = {Roberto Cavada and
               Alessandro Cimatti and
               Michele Dorigatti and
               Alberto Griggio and
               Alessandro Mariotti and
               Andrea Micheli and
               Sergio Mover and
               Marco Roveri and
               Stefano Tonetta},
  title     = {The nuXmv Symbolic Model Checker},
  booktitle = {Computer Aided Verification - 26th International Conference, {CAV}
               2014, Held as Part of the Vienna Summer of Logic, {VSL} 2014, Vienna,
               Austria, July 18-22, 2014. Proceedings},
  pages     = {334--342},
  year      = {2014},
}

@Article{Sushi,
author="Fu, Xiang
and Powell, Michael C.
and Bantegui, Michael
and Li, Chung-Chih",
title="Simple linear string constraints",
journal="Formal Aspects of Computing",
year="2013",
month="Nov",
day="01",
volume="25",
number="6",
pages="847--891",
}

@inproceedings{DBLP:conf/kbse/WangCYJ18,
  author    = {Hung{-}En Wang and
               Shih{-}Yu Chen and
               Fang Yu and
               Jie{-}Hong R. Jiang},
  title     = {A symbolic model checking approach to the analysis of string and length
               constraints},
  booktitle = {Proceedings of the 33rd {ACM/IEEE} International Conference on Automated
               Software Engineering, {ASE} 2018, Montpellier, France, September 3-7,
               2018},
  pages     = {623--633},
  year      = {2018},
  crossref  = {DBLP:conf/kbse/2018},
  url       = {https://doi.org/10.1145/3238147.3238189},
  doi       = {10.1145/3238147.3238189},
  timestamp = {Wed, 21 Nov 2018 12:44:20 +0100},
  biburl    = {https://dblp.org/rec/bib/conf/kbse/WangCYJ18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@proceedings{DBLP:conf/kbse/2018,
  editor    = {Marianne Huchard and
               Christian K{\"{a}}stner and
               Gordon Fraser},
  title     = {Proceedings of the 33rd {ACM/IEEE} International Conference on Automated
               Software Engineering, {ASE} 2018, Montpellier, France, September 3-7,
               2018},
  publisher = {{ACM}},
  year      = {2018},
  url       = {https://doi.org/10.1145/3238147},
  doi       = {10.1145/3238147},
  timestamp = {Wed, 21 Nov 2018 12:44:20 +0100},
  biburl    = {https://dblp.org/rec/bib/conf/kbse/2018},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{Manea-RP,
  author    = {Joel D. Day and
               Vijay Ganesh and
               Paul He and
               Florin Manea and
               Dirk Nowotka},
  title     = {The Satisfiability of Word Equations: Decidable and Undecidable Theories},
  booktitle = {Reachability Problems - 12th International Conference, {RP} 2018,
               Marseille, France, September 24-26, 2018, Proceedings},
  pages     = {15--29},
  year      = {2018},
  url       = {https://doi.org/10.1007/978-3-030-00250-3\_2},
  doi       = {10.1007/978-3-030-00250-3\_2},
  timestamp = {Tue, 14 May 2019 10:00:51 +0200},
  biburl    = {https://dblp.org/rec/bib/conf/rp/DayGHMN18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{Z3,
  author    = {Leonardo Mendon{\c{c}}a de Moura and
               Nikolaj Bj{\o}rner},
  title     = {{Z3:} An Efficient {SMT} Solver},
  booktitle = {Tools and Algorithms for the Construction and Analysis of Systems,
               14th International Conference, {TACAS} 2008, Held as Part of the Joint
               European Conferences on Theory and Practice of Software, {ETAPS} 2008,
               Budapest, Hungary, March 29-April 6, 2008. Proceedings},
  pages     = {337--340},
  year      = {2008},
  url       = {https://doi.org/10.1007/978-3-540-78800-3\_24},
  doi       = {10.1007/978-3-540-78800-3\_24},
  timestamp = {Tue, 14 May 2019 10:00:53 +0200},
  biburl    = {https://dblp.org/rec/bib/conf/tacas/MouraB08},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{VSS05,
  author    = {K. N. Verma and
               H. Seidl and
               T. Schwentick},
  title     = {On the Complexity of Equational Horn Clauses},
  booktitle = {CADE},
  year      = {2005},
  pages     = {337-352},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@article{BM17,
    title = "On the semantics of regular expression parsing in the wild",
    journal = "Theoretical Computer Science",
    volume = "679",
    pages = "69 - 82",
    year = "2017",
    author = "Martin Berglund and Brink van der Merwe",
    url       = {https://doi.org/10.1016/j.tcs.2016.09.006},
}

@inproceedings{FR17,
  author    = {Emmanuel Filiot and
               Pierre{-}Alain Reynier},
  editor    = {Matthew Hague and
               Igor Potapov},
  title     = {Copyful Streaming String Transducers},
  booktitle = {Reachability Problems - 11th International Workshop, {RP} 2017, London,
               UK, September 7-9, 2017, Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {10506},
  pages     = {75--86},
  publisher = {Springer},
  year      = {2017},
}

@article{CSY03,
  author    = {Cezar C{\^{a}}mpeanu and
               Kai Salomaa and
               Sheng Yu},
  title     = {A Formal Study Of Practical Regular Expressions},
  journal   = {Int. J. Found. Comput. Sci.},
  volume    = {14},
  number    = {6},
  pages     = {1007--1018},
  year      = {2003},
  url       = {https://doi.org/10.1142/S012905410300214X},
} 

@inproceedings{AD11,
  author    = {Rajeev Alur and
               Jyotirmoy V. Deshmukh},
  editor    = {Luca Aceto and
               Monika Henzinger and
               Jir{\'{\i}} Sgall},
  title     = {Nondeterministic Streaming String Transducers},
  booktitle = {Automata, Languages and Programming - 38th International Colloquium,
               {ICALP} 2011, Zurich, Switzerland, July 4-8, 2011, Proceedings, Part
               {II}},
  series    = {Lecture Notes in Computer Science},
  volume    = {6756},
  pages     = {1--20},
  publisher = {Springer},
  year      = {2011},
  url       = {https://doi.org/10.1007/978-3-642-22012-8\_1},
}

@inproceedings{CN09,
  author    = {Benjamin Carle and
               Paliath Narendran},
  editor    = {Adrian{-}Horia Dediu and
               Armand{-}Mihai Ionescu and
               Carlos Mart{\'{\i}}n{-}Vide},
  title     = {On Extended Regular Expressions},
  booktitle = {Language and Automata Theory and Applications, Third International
               Conference, {LATA} 2009, Tarragona, Spain, April 2-8, 2009. Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {5457},
  pages     = {279--289},
  publisher = {Springer},
  year      = {2009},
  url       = {https://doi.org/10.1007/978-3-642-00982-2\_24},
}

@article{Gluskov61,
	year = 1961,
	publisher = {{IOP} Publishing},
	volume = {16},
	number = {5},
	pages = {1--53},
	author = {V M Glushkov},
	title = {The abstract theory of automata},
	journal = {Russian Mathematical Surveys},
}

@book{MasterREbook,
author = {Friedl, Jeffrey E. F. and Oram, Andy},
title = {Mastering Regular Expressions},
year = {2002},
isbn = {0596002890},
publisher = {O'Reilly \& Associates, Inc.},
address = {USA},
edition = {2},
}

@inproceedings{BDM14,
  author    = {Martin Berglund and
               Frank Drewes and
               Brink van der Merwe},
  editor    = {Zolt{\'{a}}n {\'{E}}sik and
               Zolt{\'{a}}n F{\"{u}}l{\"{o}}p},
  title     = {Analyzing Catastrophic Backtracking Behavior in Practical Regular
               Expression Matching},
  booktitle = {Proceedings 14th International Conference on Automata and Formal Languages,
               {AFL} 2014, Szeged, Hungary, May 27-29, 2014},
  series    = {{EPTCS}},
  volume    = {151},
  pages     = {109--123},
  year      = {2014},
  url       = {https://doi.org/10.4204/EPTCS.151.7},
  doi       = {10.4204/EPTCS.151.7},
}

@article{Thompson68,
  author    = {Ken Thompson},
  title     = {Regular Expression Search Algorithm},
  journal   = {Commun. {ACM}},
  volume    = {11},
  number    = {6},
  pages     = {419--422},
  year      = {1968},
  url       = {https://doi.org/10.1145/363347.363387},
  doi       = {10.1145/363347.363387},
}



@inproceedings{LMK19,
  author    = {Blake Loring and
               Duncan Mitchell and
               Johannes Kinder},
  title     = {Sound regular expression semantics for dynamic symbolic execution
               of JavaScript},
  booktitle = {Proceedings of the 40th {ACM} {SIGPLAN} Conference on Programming
               Language Design and Implementation, {PLDI} 2019, Phoenix, AZ, USA,
               June 22-26, 2019},
  pages     = {425--438},
  publisher = {{ACM}},
  year      = {2019},
  url       = {https://doi.org/10.1145/3314221.3314645},
  doi       = {10.1145/3314221.3314645},
}

@inproceedings{aratha,
  author    = {Roberto Amadini and
               Mak Andrlon and
               Graeme Gange and
               Peter Schachte and
               Harald S{\o}ndergaard and
               Peter J. Stuckey},
  editor    = {Louis{-}Martin Rousseau and
               Kostas Stergiou},
  title     = {Constraint Programming for Dynamic Symbolic Execution of JavaScript},
  booktitle = {Integration of Constraint Programming, Artificial Intelligence, and
               Operations Research - 16th International Conference, {CPAIOR} 2019,
               Thessaloniki, Greece, June 4-7, 2019, Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {11494},
  pages     = {1--19},
  publisher = {Springer},
  year      = {2019},
  url       = {https://doi.org/10.1007/978-3-030-19212-9\_1},
  doi       = {10.1007/978-3-030-19212-9\_1},
  timestamp = {Sun, 25 Oct 2020 23:15:05 +0100},
  biburl    = {https://dblp.org/rec/conf/cpaior/AmadiniAGSSS19.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/cp/AmadiniGS20,
  author    = {Roberto Amadini and
               Graeme Gange and
               Peter J. Stuckey},
  editor    = {Helmut Simonis},
  title     = {Dashed Strings and the Replace(-all) Constraint},
  booktitle = {Principles and Practice of Constraint Programming - 26th International
               Conference, {CP} 2020, Louvain-la-Neuve, Belgium, September 7-11,
               2020, Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {12333},
  pages     = {3--20},
  publisher = {Springer},
  year      = {2020},
  url       = {https://doi.org/10.1007/978-3-030-58475-7\_1},
  doi       = {10.1007/978-3-030-58475-7\_1},
  timestamp = {Sat, 19 Sep 2020 13:19:46 +0200},
  biburl    = {https://dblp.org/rec/conf/cp/AmadiniGS20.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


@inproceedings{DBLP:conf/spin/LoringMK17,
  author    = {Blake Loring and
               Duncan Mitchell and
               Johannes Kinder},
  editor    = {Hakan Erdogmus and
               Klaus Havelund},
  title     = {ExpoSE: practical symbolic execution of standalone JavaScript},
  booktitle = {Proceedings of the 24th {ACM} {SIGSOFT} International {SPIN} Symposium
               on Model Checking of Software, Santa Barbara, CA, USA, July 10-14,
               2017},
  pages     = {196--199},
  publisher = {{ACM}},
  year      = {2017},
  url       = {https://doi.org/10.1145/3092282.3092295},
  doi       = {10.1145/3092282.3092295},
  timestamp = {Tue, 06 Nov 2018 11:06:50 +0100},
  biburl    = {https://dblp.org/rec/conf/spin/LoringMK17.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DMC+19,
author = {Davis, James C. and Michael IV, Louis G. and Coghlan, Christy A. and Servant, Francisco and Lee, Dongyoon},
title = {Why Aren't Regular Expressions a Lingua Franca? An Empirical Study on the Re-Use and Portability of Regular Expressions},
year = {2019},
isbn = {9781450355728},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
booktitle = {Proceedings of the 2019 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
pages = {443–454},
numpages = {12},
series = {ESEC/FSE 2019},
url = {https://doi.org/10.1145/3338906.3338909},
doi = {10.1145/3338906.3338909},
}

@article{ZAM19,
  title={Solving String Constraints with Streaming String Transducers},
  author={Qizhen Zhu and Hitoshi Akama and Yasuhiko Minamide},
  journal={Journal of Information Processing},
  volume={27},
  number={ },
  pages={810-821},
  year={2019},
  doi={10.2197/ipsjjip.27.810}
}  

@inproceedings{MDD+19,
author = {Michael, Louis G. and Donohue, James and Davis, James C. and Lee, Dongyoon and Servant, Francisco},
title = {Regexes Are Hard: Decision-Making, Difficulties, and Risks in Programming Regular Expressions},
year = {2019},
publisher = {IEEE Press},
url = {https://doi.org/10.1109/ASE.2019.00047},
doi = {10.1109/ASE.2019.00047},
booktitle = {Proceedings of the 34th IEEE/ACM International Conference on Automated Software Engineering},
pages = {415–426},
numpages = {12},
series = {ASE '19},
 url       = {https://doi.org/10.1109/ASE.2019.00047},
  doi       = {10.1109/ASE.2019.00047},
}

@inproceedings{SP18,
author = {Staicu, Cristian-Alexandru and Pradel, Michael},
title = {Freezing the Web: A Study of ReDoS Vulnerabilities in Javascript-Based Web Servers},
year = {2018},
publisher = {USENIX Association},
address = {USA},
booktitle = {Proceedings of the 27th USENIX Conference on Security Symposium},
pages = {361–376},
numpages = {16},
location = {Baltimore, MD, USA},
series = {SEC'18},
  url       = {https://www.usenix.org/conference/usenixsecurity18/presentation/staicu},
}

@inproceedings{DCSL18,
author = {Davis, James C. and Coghlan, Christy A. and Servant, Francisco and Lee, Dongyoon},
title = {The Impact of Regular Expression Denial of Service (ReDoS) in Practice: An Empirical Study at the Ecosystem Scale},
year = {2018},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
booktitle = {Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
pages = {246–256},
numpages = {11},
location = {Lake Buena Vista, FL, USA},
series = {ESEC/FSE 2018}
}

@article{FS19,
  author    = {Dominik D. Freydenberger and
               Markus L. Schmid},
  title     = {Deterministic regular expressions with back-references},
  journal   = {J. Comput. Syst. Sci.},
  volume    = {105},
  pages     = {1--39},
  year      = {2019},
  url       = {https://doi.org/10.1016/j.jcss.2019.04.001},
  doi       = {10.1016/j.jcss.2019.04.001},
}

@article{Schmid16,
  author    = {Markus L. Schmid},
  title     = {Characterising {REGEX} languages by regular languages equipped with
               factor-referencing},
  journal   = {Inf. Comput.},
  volume    = {249},
  pages     = {1--17},
  year      = {2016},
  url       = {https://doi.org/10.1016/j.ic.2016.02.003},
  doi       = {10.1016/j.ic.2016.02.003},
}

@article{Freydenberger13,
  author    = {Dominik D. Freydenberger},
  title     = {Extended Regular Expressions: Succinctness and Decidability},
  journal   = {Theory Comput. Syst.},
  volume    = {53},
  number    = {2},
  pages     = {159--193},
  year      = {2013},
  url       = {https://doi.org/10.1007/s00224-012-9389-0},
  doi       = {10.1007/s00224-012-9389-0},
}

@misc{ECMAScript10,
    author = {Brian Terlson and Bradley Farias and Jordan Harband},
    title = {{ECMAS}script Language Specification, 10th Edition},
    year = {2019},
    howpublished = {\url{https://262.ecma-international.org/10.0/}}
}

@misc{ECMAScript11,
    author = {Jordan Harband and Kevin Smith},
    title = {{ECMAS}script 2020 Language Specification, 11th Edition},
    year = {2020},
    howpublished = {\url{https://262.ecma-international.org/11.0/}}
}

@inproceedings{Kozen77,
  author    = {Dexter Kozen},
  title     = {Lower Bounds for Natural Proof Systems},
  booktitle = {18th Annual Symposium on Foundations of Computer Science, Providence,
               Rhode Island, USA, 31 October - 1 November 1977},
  pages     = {254--266},
  publisher = {{IEEE} Computer Society},
  year      = {1977},
}

@article{CKS81,
  author    = {Ashok K. Chandra and
               Dexter Kozen and
               Larry J. Stockmeyer},
  title     = {Alternation},
  journal   = {J. {ACM}},
  volume    = {28},
  number    = {1},
  pages     = {114--133},
  year      = {1981},
  url       = {https://doi.org/10.1145/322234.322243},
  doi       = {10.1145/322234.322243},
  timestamp = {Thu, 14 Oct 2021 09:25:04 +0200},
  biburl    = {https://dblp.org/rec/journals/jacm/ChandraKS81.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{HAMPI,
  author    = {Adam Kiezun and
               Vijay Ganesh and
               Shay Artzi and
               Philip J. Guo and
               Pieter Hooimeijer and
               Michael D. Ernst},
  title     = {{HAMPI:} {A} solver for word equations over strings, regular expressions,
               and context-free grammars},
  journal   = {{ACM} Trans. Softw. Eng. Methodol.},
  volume    = {21},
  number    = {4},
  pages     = {25:1--25:28},
  year      = {2012},
url = {https://doi.org/10.1145/2377656.2377662},
doi = {10.1145/2377656.2377662},
}

@incollection{Aho90,
  author    = {Alfred V. Aho},
  title     = {Algorithms for Finding Patterns in Strings},
  booktitle = {Handbook of Theoretical Computer Science, Volume {A:} Algorithms and
               Complexity},
  pages     = {255--300},
  year      = {1990},
  timestamp = {Sat, 03 Aug 2019 19:26:43 +0200},
  biburl    = {https://dblp.org/rec/books/el/leeuwen90/Aho90.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{BM17b,
  author    = {Martin Berglund and
               Brink van der Merwe},
  editor    = {Jan Holub and
               Jan Zd{\'{a}}rek},
  title     = {Regular Expressions with Backreferences Re-examined},
  booktitle = {Proceedings of the Prague Stringology Conference 2017, Prague, Czech
               Republic, August 28-30, 2017},
  pages     = {30--41},
  publisher = {Department of Theoretical Computer Science, Faculty of Information
               Technology, Czech Technical University in Prague},
  year      = {2017},
  url       = {http://www.stringology.org/event/2017/p04.html},
  timestamp = {Sat, 07 Jul 2018 15:59:19 +0200},
  biburl    = {https://dblp.org/rec/conf/stringology/BerglundM17.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{CS16,
  author    = {Carl Chapman and
               Kathryn T. Stolee},
  editor    = {Andreas Zeller and
               Abhik Roychoudhury},
  title     = {Exploring regular expression usage and context in Python},
  booktitle = {Proceedings of the 25th International Symposium on Software Testing
               and Analysis, {ISSTA} 2016, Saarbr{\"{u}}cken, Germany, July
               18-20, 2016},
  pages     = {282--293},
  publisher = {{ACM}},
  year      = {2016},
  url       = {https://doi.org/10.1145/2931037.2931073},
  doi       = {10.1145/2931037.2931073},
  timestamp = {Tue, 06 Nov 2018 16:57:30 +0100},
  biburl    = {https://dblp.org/rec/conf/issta/ChapmanS16.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@misc{PythonRegex,
    title = {{Python} re module},
    howpublished = {\url{https://docs.python.org/3/library/re.html\#regular-expression-objects}}
}

@misc{JavascriptRegex,
    title = {{Javascript} Regular Expressions},
    howpublished = {\url{https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions}}
}

@Article{Gentzen35,
  author =       "Gerhard Gentzen",
  title =        "Untersuchungen {\"u}ber das {L}ogische {S}chliessen",
  journal =      "Mathematische Zeitschrift",
  volume =       "39",
  year =         "1935",
  pages =        "176--210, 405--431",
  note =         "English translation, ``Investigations into Logical
                  Deduction,'' in \cite{Gentzen69}"
}

@BOOK{Gentzen69,
        Editor             = {M. E. Szabo},
        PUBLISHER          = {North-Holland, Amsterdam},
        TITLE              = {The Collected Papers of Gerhard Gentzen},
        YEAR               = {1969},
        LOCATION           = {D Gen}
}

@book{DBLP:books/daglib/0022394,
  author    = {John Harrison},
  title     = {Handbook of Practical Logic and Automated Reasoning},
  publisher = {Cambridge University Press},
  year      = {2009},
  isbn      = {978-0-521-89957-4},
  pages     = {I-XIX, 1-681},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@article{CCG06,
	author    = {Olivier Carton and
	Christian Choffrut and
	Serge Grigorieff},
	title     = {Decision problems among the main subfamilies of rational relations},
	journal   = {{ITA}},
	volume    = {40},
	number    = {2},
	pages     = {255--275},
	year      = {2006},
	url       = {https://doi.org/10.1051/ita:2006005},
	doi       = {10.1051/ita:2006005}
}

@article{NieuwenhuisetalJACM2006,
 author = {Robert Nieuwenhuis and Albert Oliveras and Cesare Tinelli},
 title = "Solving {SAT} and {SAT} Modulo Theories: From an abstract
            {Davis}-{Putnam}-{Logemann}-{Loveland} procedure to {DPLL(T)}",
 journal = {Journal of the ACM},
 volume = {53},
 number = {6},
 year = {2006},
 issn = {0004-5411},
 pages = {937--977},
 publisher = {ACM},
 address = {New York, NY, USA},
  url       = {https://doi.org/10.1145/1217856.1217859},
  doi       = {10.1145/1217856.1217859},
 }

@phdthesis{BerzishMurphy2021,
author={{Berzish, Murphy}},
title={Z3str4: A Solver for Theories over Strings},
year={2021},
publisher="UWSpace",
url={http://hdl.handle.net/10012/17102}
}

@misc{cox2017model,
      title={Model Checking Regular Language Constraints}, 
      author={Arlen Cox and Jason Leasure},
      year={2017},
      eprint={1708.09073},
      url       = {http://arxiv.org/abs/1708.09073},
      archivePrefix={arXiv},
      primaryClass={cs.LO}
}

@inproceedings{DBLP:conf/aplas/LeH18,
  author    = {Quang Loc Le and
               Mengda He},
  editor    = {Sukyoung Ryu},
  title     = {A Decision Procedure for String Logic with Quadratic Equations, Regular
               Expressions and Length Constraints},
  booktitle = {Programming Languages and Systems - 16th Asian Symposium, {APLAS}
               2018, Wellington, New Zealand, December 2-6, 2018, Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {11275},
  pages     = {350--372},
  publisher = {Springer},
  year      = {2018},
  url       = {https://doi.org/10.1007/978-3-030-02768-1\_19},
  doi       = {10.1007/978-3-030-02768-1\_19},
  timestamp = {Tue, 14 May 2019 10:00:41 +0200},
  biburl    = {https://dblp.org/rec/conf/aplas/LeH18.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/cp/AmadiniGST17,
  author    = {Roberto Amadini and
               Graeme Gange and
               Peter J. Stuckey and
               Guido Tack},
  editor    = {J. Christopher Beck},
  title     = {A Novel Approach to String Constraint Solving},
  booktitle = {Principles and Practice of Constraint Programming - 23rd International
               Conference, {CP} 2017, Melbourne, VIC, Australia, August 28 - September
               1, 2017, Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {10416},
  pages     = {3--20},
  publisher = {Springer},
  year      = {2017},
  url       = {https://doi.org/10.1007/978-3-319-66158-2\_1},
  doi       = {10.1007/978-3-319-66158-2\_1},
  timestamp = {Sat, 19 Oct 2019 20:32:31 +0200},
  biburl    = {https://dblp.org/rec/conf/cp/AmadiniGST17.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/cpaior/ScottFPS17,
  author    = {Joseph D. Scott and
               Pierre Flener and
               Justin Pearson and
               Christian Schulte},
  editor    = {Domenico Salvagnin and
               Michele Lombardi},
  title     = {Design and Implementation of Bounded-Length Sequence Variables},
  booktitle = {Integration of {AI} and {OR} Techniques in Constraint Programming
               - 14th International Conference, {CPAIOR} 2017, Padua, Italy, June
               5-8, 2017, Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {10335},
  pages     = {51--67},
  publisher = {Springer},
  year      = {2017},
  url       = {https://doi.org/10.1007/978-3-319-59776-8\_5},
  doi       = {10.1007/978-3-319-59776-8\_5},
  timestamp = {Tue, 14 May 2019 10:00:47 +0200},
}

@Book{BGG97,
  author    = {Egon B{\"{o}}rger and
               Erich Gr{\"{a}}del and
               Yuri Gurevich},
  title     = {The Classical Decision Problem},
  series    = {Perspectives in Mathematical Logic},
  publisher = {Springer},
  year      = {1997},
  timestamp = {Mon, 06 Nov 2006 15:21:04 +0100},
  biburl    = {https://dblp.org/rec/bib/books/sp/BorgerGG1997},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@Article{M76,
 Author = {A. N. {Masilov}},
 Title = {{Multilevel magazine automata}},
 FJournal = {{Problemy Peredachi Informatsii}},
 Journal = {{Probl. Peredachi Inf.}},
 ISSN = {0555-2923},
 Volume = {12},
 Number = {1},
 Pages = {55--62},
 Year = {1976},
 Publisher = {Russian Academy of Sciences - RAS (Rossi\u{\i}skaya Akademiya Nauk - RAN), Institute for Information Transmission Problems, Moscow; Nauka, Moscow},
 Language = {Russian},
 MSC2010 = {68Q45},
 Zbl = {0361.68079}
}

@article{E91,
  author    = {Joost Engelfriet},
  title     = {Iterated Stack Automata and Complexity Classes},
  journal   = {Inf. Comput.},
  volume    = {95},
  number    = {1},
  pages     = {21--75},
  year      = {1991},
  url       = {https://doi.org/10.1016/0890-5401(91)90015-T},
  doi       = {10.1016/0890-5401(91)90015-T},
  timestamp = {Fri, 12 Feb 2021 22:16:17 +0100},
  biburl    = {https://dblp.org/rec/journals/iandc/Engelfriet91.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{WS18,
  author       = {Peipei Wang and
                  Kathryn T. Stolee},
  editor       = {Gary T. Leavens and
                  Alessandro Garcia and
                  Corina S. Pasareanu},
  title        = {How well are regular expressions tested in the wild?},
  booktitle    = {Proceedings of the 2018 {ACM} Joint Meeting on European Software Engineering
                  Conference and Symposium on the Foundations of Software Engineering,
                  {ESEC/SIGSOFT} {FSE} 2018, Lake Buena Vista, FL, USA, November 04-09,
                  2018},
  pages        = {668--678},
  publisher    = {{ACM}},
  year         = {2018},
}

@inproceedings{LTR+15,
  author       = {Tianyi Liang and
                  Nestan Tsiskaridze and
                  Andrew Reynolds and
                  Cesare Tinelli and
                  Clark W. Barrett},
  editor       = {Carsten Lutz and
                  Silvio Ranise},
  title        = {A Decision Procedure for Regular Membership and Length Constraints
                  over Unbounded Strings},
  booktitle    = {Frontiers of Combining Systems - 10th International Symposium, FroCoS
                  2015, Wroclaw, Poland, September 21-24, 2015. Proceedings},
  series       = {Lecture Notes in Computer Science},
  volume       = {9322},
  pages        = {135--150},
  publisher    = {Springer},
  year         = {2015},
}

@article{LRT+16,
  author       = {Tianyi Liang and
                  Andrew Reynolds and
                  Nestan Tsiskaridze and
                  Cesare Tinelli and
                  Clark W. Barrett and
                  Morgan Deters},
  title        = {An efficient {SMT} solver for string constraints},
  journal      = {Formal Methods Syst. Des.},
  volume       = {48},
  number       = {3},
  pages        = {206--234},
  year         = {2016},
  url          = {https://doi.org/10.1007/s10703-016-0247-6},
  doi          = {10.1007/s10703-016-0247-6},
}

@article{BD+23,
  author       = {Murphy Berzish and
                  Joel D. Day and
                  Vijay Ganesh and
                  Mitja Kulczynski and
                  Florin Manea and
                  Federico Mora and
                  Dirk Nowotka},
  title        = {Towards more efficient methods for solving regular-expression heavy
                  string constraints},
  journal      = {Theor. Comput. Sci.},
  volume       = {943},
  pages        = {50--72},
  year         = {2023},
}

@book{HU79,
  author = {Hopcroft, John E. and Ullman, Jeff D.},
  title = {Introduction to Automata Theory, Languages, and Computation},
  publisher = {Addison-Wesley Publishing Company},
  year = 1979
}
